Class HC_Backpackspawner : actor Replaces Backpack
{
	States{
		Spawn:
		TNT1 A 1;
		TNT1 A 1;
		TNT1 A 1 A_SpawnItemEx("HC_Backpack",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
		TNT1 A 1;
		TNT1 A 1 A_SpawnItemEx("PistolUpgrader",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
		TNT1 A 1;
		TNT1 A 1 A_SpawnItemEx("HC_BackpackTrunk",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
		Stop;
	}	
}

/*
Class HC_Backpack : BackpackItem
{
	Default
	{
	+COUNTITEM;
	+INVENTORY.AUTOACTIVATE;
	+FORCEXYBILLBOARD;
	+INVENTORY.ALWAYSPICKUP;
	+INVENTORY.BIGPOWERUP;
	+FLOATBOB;
	
	Height 26;
	Inventory.PickupMessage "Plucked a singularity vessel out of the air!";
	}
	States
	{
		Spawn:
		BPK2 A random(1,10);
		BPK2 B random(1,3);
		Loop;
	}
}


Class InfinityToken : Inventory	{	

	Default	
		{
		Inventory.MaxAmount 99999999;
		}	
}
*/

class HC_BackpackTrunk : CustomInventory
{
	Default
	{
	Height 26;
	Inventory.PickupMessage "Picked up a Huge trunk full of ammo!";
	}
	States
	{
	Spawn:
		ZTRU B -1;
		Stop;
	
	Pickup:
		TNT1 A 0 A_GiveInventory("Backpack", 1);
		
		TNT1 A 0 A_StartSound("MagazineBoxUp",CHAN_5,0,.7);
		TNT1 A 10;
		TNT1 A 0 A_StartSound("ShellBoxUp",CHAN_6,0,.7);
		TNT1 A 10;
		TNT1 A 0 A_StartSound("RocketBox",CHAN_7,0,.7);
		TNT1 A 10;
		TNT1 A 0 A_StartSound("CellPackUp",CHAN_WEAPON,0,.7);
		TNT1 A 10;
		Stop;
	}
}

class HC_Backpack : CustomInventory				//From GunCaster, code orignally by Zhs2.
{
	// The list of ammotypes NOT to raise the MaxAmount for.
	static const string HC_AmmoBlacklist[] = {
	"GaussHeat",
	"PlasmaHeat",
	"BloodPunchCharges",
	"ChainsawFuel"
	};
	
	bool SkipThisType;
	
	Default
	{
		Tag "Singularity Vessel";
		//Inventory.PickupSound "Backpack/Pickup";
		Inventory.PickupMessage "Plucked a Singularity Vessel out of the air!";

		+DONTGIB
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+FORCEXYBILLBOARD
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+FLOATBOB
	}
	States
	{
	Spawn:
		BPK2 A random(1,10);
		BPK2 B random(1,3);
		Loop;
		
	Pickup:
		TNT1 A 0
		{		
			// Search through the picker-upper's inventory.
			for(Inventory item = self.inv; item != null; item = item.inv)
			{
				// If it's of type Ammo...
				if(item is "Ammo")
				{
					// Cast to access Ammo methods.
					let thisammotype = Ammo(item);
					// Check for if this inventory item's type is blacklisted.
					for(int blacklist = 0; blacklist < invoker.HC_AmmoBlacklist.Size(); blacklist++)
					{
						if(thisammotype.GetClassName() == invoker.HC_AmmoBlacklist[blacklist])
						{
							// Blacklisted ammotype, skip it.
							invoker.SkipThisType = TRUE;
						}
					}
							
					// If it's not blacklisted, increase its max!
					if(!invoker.SkipThisType)
					{
						// Only increase max ammo with hammerspace if we're above backpack max.
						if(thisammotype.MaxAmount >= thisammotype.BackpackMaxAmount)
						{
							// Plus 10% of backpack max.
							thisammotype.MaxAmount += thisammotype.BackpackMaxAmount * 0.2; //0.1
						}
					}
					// Reset the bool on each ammotype run.
					invoker.SkipThisType = FALSE;
				}
			}
			
			//A_GiveInventory("Backpack", 1); // Always hand off a backpack.			
			//A_GiveInventory("InfinityToken", 1);
		}
		Stop;
	}
}

////////////////////////////Shell

Class HC_Shell : Ammo Replaces Shell {

	Default{
  Inventory.PickupMessage "Picked up a small box of 4 gauge shotgun shells.";
  Inventory.PickupSound "ShellUp";
  Inventory.Amount 8; 			//8
  Inventory.MaxAmount 50; 		//100
  Ammo.BackpackAmount 8; 		//8
  Ammo.BackpackMaxAmount 100; 	//200
  Inventory.Icon "AMOICO4";
  }
  States
  {
  Spawn:
    NSHL A -1;
    Stop;
  }
}

Class HC_ShellBox : HC_Shell Replaces ShellBox
{

	Default{
  Inventory.PickupMessage "Picked up a huge box of 8 gauge shotgun shells.";
  Inventory.Amount 40;		//60;
  Inventory.PickupSound "ShellBoxUp";
  }
  States
  {
  Spawn:
    NSHL B -1;
    Stop;
  }
}

//////////////////////Magazine

Class HC_Magazine : Ammo Replaces Clip
{
	Default {
  Inventory.PickupMessage "Picked up a large box magazine of 50 beowolf rounds."; //"Meme round"
  Inventory.Amount 40;//20;//50; //15
  Inventory.MaxAmount 200;//1500; //300
  Ammo.BackpackAmount 40;//20;//50; //15
  Ammo.BackpackMaxAmount 400;//2000; //600
  Inventory.Icon "AMOICO1";
  Inventory.PickupSound "MagazineUp";
  }
  States
  {
  Spawn:
	//TNT1 A 0;
	ZMAG A -1;
	Stop;
	
	TNT1 A 1 A_Jump(35,"mag2","mag3","mag4");
	
	mag1:
    ZMAG A -1;
    Stop;
	
	mag2:
	ZMAG B -1;
    Stop;
	
	mag3:
	ZMAG C -1;
    Stop;
	
	mag4:
	ZMAG D -1;
    Stop;
  }
}

//Class PistolMagazine : Magazine Replaces Pistol {}

Class HC_MagazineBox : HC_Magazine Replaces ClipBox
{
	Default {
  Inventory.PickupMessage "Picked up a huge trunk of 50 beowolf rounds.";
  Inventory.PickupSound "MagazineBoxUp";
  Inventory.Amount 200;//100;//250; //75
  }
  States
  {
  Spawn:
    ZTRU A -1;
    Stop;
  }
}

//////////////////////Rockets

Class HC_Rocketspawner : actor Replaces RocketAmmo
{
States{
	Spawn:
	TNT1 A 1;
	TNT1 A 1 A_Jump(50,"Four");
	TNT1 A 1;
	TNT1 A 1 A_SpawnItemEx("HC_RocketAmmo",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
	TNT1 A 1;
	TNT1 A 1 A_SpawnItemEx("HC_RocketAmmo",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
	
	TNT1 A 1;
	TNT1 A 1 A_Jump(50,"NoThird");
	
	
	TNT1 A 1;
	TNT1 A 1 A_SpawnItemEx("HC_RocketAmmo",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
	NoThird:
	TNT1 A 1;
	Stop;
	
	Four:
	TNT1 A 1;
	TNT1 A 1 A_SpawnItemEx("HC_RocketPack",0,0,0,frandom(-1,1),frandom(-1,1),frandom(0,1));
	Stop;
}	
}



Class HC_RocketAmmo : Ammo
{
	Default {
  Inventory.PickupMessage "Picked up a rocket.";
  Inventory.PickupSound "RocketOne";
  Inventory.Amount 1;
  Inventory.MaxAmount 50;
  Ammo.BackpackAmount 1;
  Ammo.BackpackMaxAmount 100;
  Inventory.Icon "AMOICO3";
  }
  States
  {
  Spawn:
    ROCK A -1;
    Stop;
  }
}

Class HC_RocketPack : HC_RocketAmmo
{
	Default {
  Inventory.PickupMessage "Picked up a 4 pack rockets.";
  Inventory.PickupSound "RocketBox";
  Inventory.Amount 4;
  }
  States
  {
  Spawn:
    ROCK B -1;
    Stop;
  }
}

Class HC_RocketBox : HC_RocketAmmo Replaces RocketBox
{
	Default{
  Inventory.PickupMessage "Picked up a huge box of rockets.";
  Inventory.PickupSound "RocketBox";
  Inventory.Amount 15;
  }
  States
  {
  Spawn:
    ROCK C -1;
    Stop;
  }
}

////////////////////////////CELLs

Class HC_Cell : Ammo Replaces Cell
{
	Default {
  Inventory.PickupMessage "Picked up an energy cell.";
  Inventory.Amount 40;//30;//20;
  Inventory.MaxAmount 300;//400;
  Ammo.BackpackAmount 40;//30;//20;
  Ammo.BackpackMaxAmount 600;//800;
  Inventory.Icon "AMOICO2";
  Inventory.PickupSound "CellPackUp";
  }
  States
  {
  Spawn:
    CELL A random(5,10);
	CELL BCD 2;
	CELL E random(5,10);
	CELL DCB 2;
    Loop;
  }
}

Class HC_CellPack : HC_Cell Replaces CellPack
{
	Default {
  Inventory.PickupMessage "Picked up an energy cell pack.";
  Inventory.Amount 200;//130;//100;
  Inventory.PickupSound "CellUp";
  }
  States
  {
  Spawn:
    CELL F random(5,15);
	CELL GHI 2;
	CELL J random(10,20);
	CELL IHG 2;
    Loop;
  }
}