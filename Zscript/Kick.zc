/////////////////////////////////////////////////////////////KICK

Class HC_kick : CustomInventory
{

	int cooldownTimer;

	override void DoEffect()
	{
	super.DoEffect();
		if (cooldownTimer > 0)
		{
		cooldownTimer--;
		}
	}
	
	Default{
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	+INVENTORY.UNDROPPABLE
	}
	
	States 
		{

		Use:
			TNT1 A 0 
			{
			if (invoker.cooldownTimer <= 0)
			{
					A_Overlay(-202,"Kick");
					invoker.cooldownTimer = 13;
			}
				
		}
	fail;

	Feel:
		TNT1 A 0 A_QuakeEx(1,1,1,4,0,100,"*");
		Stop;

	Kick:
		TNT1 A 0 A_JumpIfInventory("BloodPunchCharges",1,"BloodKick");
	
		TNT1 A 0 A_OverlayOffset(-202,0,32,WOF_INTERPOLATE);
		//TNT1 A 0 A_Overlay(-300,"Feel");
		
		TNT1 A 0 A_StartSound("Kick",0,0,1);
		TNT1 A 0 A_JumpIf(CountInv("PowerStrength") == 0, 2);
		TNT1 A 0 A_StartSound("BerzerkSwing",0,0,.7);
		
		TNT1 A 0 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		KICK C 1 A_OverlayOffset(-202,0,32,WOF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch-0.4,SPF_INTERPOLATE);
		KICK A 1 A_OverlayOffset(-202,0,32,WOF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		KICK A 1 A_OverlayOffset(-202,-5,20,WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "Berserked");
	Normal:
		TNT1 A 0 A_FireProjectile("KickProjectile",0,false);
		Goto FireEnd;
		
	Berserked:
		TNT1 A 0 A_FireProjectile("BerserkKickProjectile",0,false);
		
	FireEnd:
		
		TNT1 A 0 A_SetPitch(pitch+0.5,SPF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-7,25,WOF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch+0.2,SPF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-10,23,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-8,30,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-7,37,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-3,43,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-1,50,WOF_INTERPOLATE);
		
		KICK A 1 A_OverlayOffset(-202,-5,37,WOF_INTERPOLATE);
		KICK A 1 A_OverlayOffset(-202,-4,36,WOF_INTERPOLATE);

		KICK C 1 A_OverlayOffset(-202,-1,43,WOF_INTERPOLATE);
		Stop;
		
		
		
		
		
		
	BloodKick:
		TNT1 A 0 A_OverlayOffset(-202,0,32,WOF_INTERPOLATE);
		//TNT1 A 0 A_Overlay(-300,"Feel");
		
		TNT1 A 0 A_StartSound("Kick",0,0,1);
		TNT1 A 0 A_StartSound("BerzerkSwing",0,0,.7);
		
		TNT1 A 0 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		KICK D 1 A_OverlayOffset(-202,0,32,WOF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch-0.7,SPF_INTERPOLATE);
		KICK E 1 A_OverlayOffset(-202,0,32,WOF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		KICK F 1 A_OverlayOffset(-202,-5,20,WOF_INTERPOLATE);
		
		TNT1 A 0 A_FireProjectile("KickBoom",0,false);
	
		TNT1 A 0 A_SetPitch(pitch+0.8,SPF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-7,25,WOF_INTERPOLATE);
		TNT1 A 0 A_SetPitch(pitch+0.3,SPF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-10,23,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-8,30,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-7,37,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-3,43,WOF_INTERPOLATE);
		KICK B 1 A_OverlayOffset(-202,-1,50,WOF_INTERPOLATE);
		
		KICK A 1 A_OverlayOffset(-202,-5,37,WOF_INTERPOLATE);
		KICK A 1 A_OverlayOffset(-202,-4,36,WOF_INTERPOLATE);

		KICK C 1 A_OverlayOffset(-202,-1,43,WOF_INTERPOLATE);
		Stop;
   }
}

/////////////////////////////////////////////////////////////PROJECTILES

class ZscriptKick : FastProjectile			//ZscriptKick writen by Zhs2, edited by H3LLW4LK3R
{
	Default
	{
		ZscriptKick.ThrustForce 20.0;
		ZscriptKick.ThrustUpward 10.0;
		
		+HITTRACER
	}
	
	double thrustforce;
	double thrustupward;
	
	property ThrustForce: thrustforce;
	property ThrustUpward: thrustupward;
	
	int isdeath;
	int isxdeath;
	
	override void PostBeginPlay ()
	{
		// Deathmatch compat
		if(deathmatch)
		{
			bMTHRUSPECIES = false;
		}
		
		Super.PostBeginPlay();
	}
	
	States
	{
	Death:
		TNT1 A 0 { isdeath = 1; isxdeath = 0; }
		goto DasMain;
	XDeath:
		TNT1 A 0 { isdeath = 0; isxdeath = 1; }
		goto DasMain;
	DasMain:
		TNT1 A 0 {
			if(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == False && tracer.bDORMANT == 0 && tracer.bISMONSTER == 1) {
			
				if(tracer.mass <= 100) {  thrustforce = thrustforce;	   thrustupward = thrustupward * 0.6; }
				if(tracer.mass >= 400) {  thrustforce = thrustforce * 0.9; thrustupward = thrustupward * 0.8; }
				if(tracer.mass >= 600) {  thrustforce = thrustforce * 0.9; thrustupward = thrustupward * 0.7; }
				if(tracer.mass >= 1000) { thrustforce = thrustforce * 0.9; thrustupward = thrustupward * 0.7; }

				// so even if you are aiming slightly downwards, it will still try to launch hit thing a bit upward.
				// But don't do it on flying targets, that'd be annoying.
				
				if(tracer.bFLOAT == 0) { A_ChangeVelocity(0, 0, thrustupward, 0, AAPTR_TRACER); }
				
				// the main beef of the projectile.
				A_ChangeVelocity(0, 0, sin(target.Pitch) * -thrustforce, 0, AAPTR_TRACER);
			}
			if(isdeath >= 1) { return ResolveState("DeathMain"); }
			if(isxdeath >= 1) { return ResolveState("XDeathMain"); }
			return ResolveState(null);
		}
		Stop;
	}
}

class KickProjectile : ZscriptKick //KickProjectile writen by Zhs2, edited by H3LLW4LK3R
{
	Default
	{
		Radius 16;
		Height 18;
		Speed 50; //170
		Projectile;
		ZscriptKick.ThrustForce 0.4;
		ZscriptKick.ThrustUpward 0.2;
		ProjectileKickback 250; //500
		DamageFunction 100;
		//DamageType "Kick";
		Decal "Kick";
		+BLOODSPLATTER
		+DONTREFLECT
		+DONTBLAST
		+MTHRUSPECIES
	}
	
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
	DeathMain:
		TNT1 A 15 {
			A_AlertMonsters(128);
			A_ChangeVelocity(-4.0,0,0,CVF_RELATIVE,AAPTR_TARGET);
			A_QuakeEx(1,1,1,5,0,100,"*");
			//A_Explode((25),96,0);
			A_StartSound("KickWall",CHAN_6,CHANF_OVERLAP,1);
			A_StartSound("BigWallHit",CHAN_5,CHANF_OVERLAP,1);
		}
		Stop;
	
	XDeathMain:
		TNT1 A 15 {
			A_AlertMonsters(128);
			A_ChangeVelocity(-4.0,0,0,CVF_RELATIVE,AAPTR_TARGET);
			A_QuakeEx(1,1,1,5,0,100,"*");
			//A_Explode((25),96,0);
			A_StartSound("BerzerkHitMonster",CHAN_5,CHANF_OVERLAP,1);
		}
		Stop;
	}
}

class BerserkKickProjectile : KickProjectile
{
	Default
	{
		ZscriptKick.ThrustForce 30;
		ZscriptKick.ThrustUpward 15;
		ProjectileKickback 1000;
		//DamageType "ExplosiveImpact";
		Decal "BerserkKick";
		DamageFunction 1000;
	}
	
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
	DeathMain:
		TNT1 A 15 {
			A_AlertMonsters(128);
			A_ChangeVelocity(-4.0,0,0,CVF_RELATIVE,AAPTR_TARGET);
			A_QuakeEx(1,1,1,12,0,100,"*");
			//A_Explode((50),96,0);
			A_StartSound("BerzerkHit",CHAN_5,CHANF_OVERLAP,1);
			A_StartSound("BigWallHit",CHAN_6,CHANF_OVERLAP,1);
		}
		Stop;
	
	XDeathMain:
		TNT1 A 15 {
			A_AlertMonsters(128);
			A_ChangeVelocity(-4.0,0,0,CVF_RELATIVE,AAPTR_TARGET);
			A_QuakeEx(1,1,1,12,0,100,"*");
			//A_Explode((50),96,0);
			A_StartSound("BerzerkHitMonster",CHAN_5,CHANF_OVERLAP,1);
		}
		Stop;
	}
}

/////////////////////////////////////////////////////////////BLOODKICK

Class KickBoom: FastProjectile
{
	Default {
	Radius 10;
	Height 3;
	
	RenderStyle "Add";
	Alpha 0.75;
	
    Damage 200;
    Speed 50;
	
	SeeSound "none";
	DeathSound "none";
	Decal "KickBurn";
	DamageType "BloodPunch";
	
	Projectile;
	+NODECAL
	+FORCEXYBILLBOARD
	+EXTREMEDEATH
	+ZDOOMTRANS
	+USEBOUNCESTATE
	+FORCEPAIN
	}
	States
	{
	Spawn:
		TNT1 A 0;
        TNT1 A 1;
		Stop;
	Bounce.Floor: 
	Bounce.Ceiling:
	Bounce.Wall:
	Death:
		
		TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("BFGMiniSparkleRed",0,0,0,frandom(-20,20),frandom(-20,20),frandom(-20,20));
				}
			}
		
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Crucible/PuffHit",0,CHANF_OVERLAP,.6);
		TTN1 A 1;
		TNT1 A 0 A_StartSound("Crucible/PuffHit",0,CHANF_OVERLAP,.7);
		TTN1 A 1;
		TNT1 A 0 A_StartSound("Crucible/PuffHit",0,CHANF_OVERLAP,.5);
		TTN1 A 5;
		TNT1 A 0 A_StartSound("Crucible/PuffHit",0,CHANF_OVERLAP,.4);
		TTN1 A 1;
		Stop;
		
	XDEath:
			TNT1 A 0;
			TNT1 A 0 {target.TakeInventory("BloodPunchCharges",1);}
			TNT1 A 0 A_StartSound("BloodPunch/HitSuccess",0,CHANF_OVERLAP,1);
			
			//TNT1 A 0 A_QuakeEx(1,1,1,12,0,100,"*");
			TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0);//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 0 A_Explode(170,0,0);
			
			TNT1 A 0 A_SpawnItemEx("BFGBigSparkleRed",random(-100,100),random(-100,100),random(-100,100));
			TNT1 AA 0 A_SpawnItemEx("BFGSmallSparkleRed",random(-125,125),random(-125,125),random(-125,125));
			TNT1 AAA 0 A_SpawnItemEx("BFGMiniSparkleRed",random(-150,150),random(-150,150),random(-150,150),random(-15,15),random(-15,15),random(-15,15));
			
			TNT1 A 0
			{
				for (int i = random(10,20); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-20,20),frandom(-20,20),frandom(-20,20));
				}
			}
			
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("ExplosiveDebris",0,0,0,frandom(-30,30),frandom(-30,30),frandom(-30,30));
				}
			}
			
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("ExplosionShockWave",0,0,0,0,0,0);
				}
			}
		
			BFR1 ABCCDDEEE 1 BRIGHT;
		Stop;
	}
}