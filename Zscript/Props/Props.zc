////////////////////////////////////////////////////////////////DEBRIS

Class PropGlass : HC_DebrisClass
{

	int roll;
	
	Default {
	//Scale .5;
	radius 2;
	
	bouncefactor 0.5;
	wallbouncefactor 0.4;
	bouncecount 5;
	//bouncesound "casings/bullet/bounce";
	bouncetype "Doom";
	
	projectile;
	-NOGRAVITY
	-NOBLOCKMAP
	+NOTELEPORT
	+THRUACTORS
	+DROPOFF
	+FLOORCLIP
	-BOUNCEONACTORS
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	//+XFLIP
	}
states
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 {invoker.roll = invoker.roll + random(0,359);}
		TNT1 A 0 A_Jump(256,"piece1","piece2","piece3");
		
	piece1:
		XPG1 A 0;
		Goto Speen;
	piece2:
		XPG2 A 0;
		Goto Speen;
	piece3:
		XPG3 A 0;
		Goto Speen;
		
	Speen:
		"####" A 0 {invoker.roll = invoker.roll + 20;}
		"####" A 0;
		"####" A 1 A_SetRoll(invoker.roll,SPF_INTERPOLATE);
		loop;
	Death:
		"####" A 0;
		"####" A 0 A_Jump(128,"Death2");
	
	
	Death1:
		"####" A 0;
		"####" A 0 A_SetRoll(0,SPF_INTERPOLATE);
		"####" B 1;
		"####" A 0 A_Jump(250,"Death1");
		"####" B 1;
		"####" B -1;
		stop;
	Death2:
		"####" A 0;
		"####" A 0 A_SetRoll(0,SPF_INTERPOLATE);
		"####" B 1 {bXFLIP = true;}
		"####" A 0 A_Jump(250,"Death2");
		"####" B 1;
		"####" B -1;
		stop;
	}
}

Class PropMetal : HC_DebrisClass
{

	int roll;
	
	Default {
	//Scale .5;
	radius 2;
	
	bouncefactor 0.5;
	wallbouncefactor 0.4;
	bouncecount 5;
	//bouncesound "casings/bullet/bounce";
	bouncetype "Doom";
	
	projectile;
	-NOGRAVITY
	-NOBLOCKMAP
	+NOTELEPORT
	+THRUACTORS
	+DROPOFF
	+FLOORCLIP
	-BOUNCEONACTORS
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	//+XFLIP
	}
states
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 {invoker.roll = invoker.roll + random(0,359);}
		TNT1 A 0 A_Jump(256,"piece1","piece2","piece3","piece4");
		
	piece1:
		XPM1 A 0;
		Goto Speen;
	piece2:
		XPM2 A 0;
		Goto Speen;
	piece3:
		XPM3 A 0;
		Goto Speen;
	piece4:
		XPM4 A 0;
		Goto Speen;
		
	Speen:
		"####" A 0 {invoker.roll = invoker.roll + 20;}
		"####" A 0; //A_SpawnItemEx("CasingSmoketrail",0,0,0,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		"####" A 1 A_SetRoll(invoker.roll,SPF_INTERPOLATE);
		loop;
	Death:
		"####" A 0; //A_StartSound("Casings/Bullet/die");
		"####" A 0 A_Jump(128,"Death2");
	
	
	Death1:
		"####" A 0; //A_SpawnItemEx("CasingSmoketrail",0,0,0,frandom(-0.5,0.5),frandom(-0.5,0.5),1);
		"####" A 0 A_SetRoll(0,SPF_INTERPOLATE);
		"####" B 1;
		"####" A 0 A_Jump(250,"Death1");
		"####" B 1;
		"####" B -1;
		stop;
	Death2:
		"####" A 0; //A_SpawnItemEx("CasingSmoketrail",0,0,0,frandom(-0.5,0.5),frandom(-0.5,0.5),1);
		"####" A 0 A_SetRoll(0,SPF_INTERPOLATE);
		"####" B 1 {bXFLIP = true;}
		"####" A 0 A_Jump(250,"Death2");
		"####" B 1;
		"####" B -1;
		stop;
	}
}

////////////////////////////////////////////////////////////////PROPS

Class HC_Column : Actor Replaces Column
{
	Default
	{
		Health 300;
		Radius 10;
		Height 42;
		Mass 9999999;
		
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		-ISMONSTER;
		
		DeathSound "none";
	}
	
	States{
	
	
	
	Spawn:
		COLU A 1;
		TNT1 A 0 A_JumpIfHealthLower(280,"Broken1");
		Loop;
	
	
	
	Broken1:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(10,15); i > 0; i--)
			{
				A_SpawnItemEx("PropGlass",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
	Loop1:
		TNT1 A 0 A_Jump(250,5);
		TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
		TNT1 A 0
		{
			for (int i = random(1,4); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,40,frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesBig",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		COLU B 1;
		TNT1 A 0 A_JumpIfHealthLower(180,"Broken2");
		Loop;
		
		
		
	Broken2:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(5,10); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,38,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
	Loop2:
		TNT1 A 0 A_Jump(250,5);
		TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
		TNT1 A 0
		{
			for (int i = random(1,4); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,35,frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesBig",0,0,35,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,35,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		COLU C 1;
		TNT1 A 0 A_JumpIfHealthLower(89,"Broken3");
		
		Loop;
		
		
		
	Broken3:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(10,20); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,25,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
	Loop2:
		TNT1 A 0 A_Jump(250,5);
		TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
		TNT1 A 0
		{
			for (int i = random(1,4); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,15,frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesBig",0,0,15,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,15,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		COLU D 1;
		TNT1 A 0 A_JumpIfHealthLower(1,"Death");
		Loop;
	
	
	
	Death:
		TNT1 A 0;
		TNT1 A 0
		{
			for (int i = random(5,10); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,15,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0 A_NoBlocking;
		COLU E 1;
		COLU E -1;
		Stop;
	}
}



Class HC_BurningBarrel : Actor Replaces BurningBarrel
{
	Default
		{
			Radius 16;
			Height 32;
			ProjectilePassHeight -16;
			
			+SOLID;
		}
	States
		{
		Spawn:
			FCAN ABC 4 Bright;
			Loop;
		}
}




Class HC_ExplosiveBarrel : ExplosiveBarrel Replaces ExplosiveBarrel
{
	Default {
		Health 20;
		Radius 10;
		Height 42;
		
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		-ISMONSTER;
		//+OLDRADIUSDMG;
		
		DeathSound "none";
		//Obituary "$OB_BARREL"; // "%o went boom."
	}
	States
	{
		Spawn:
		BAR1 ABCB 6;
		Loop;
		Death:

		BEXP A 1;
		BEXP B 5 Bright A_Scream;
		BEXP C 5 Bright;
		TNT1 A 0 A_SpawnItemEx("BarrelFX");
		BEXP C 5 Bright;
		//TNT1 A 0 A_QuakeEx(1,1,1,10,0,500,"*");
		BEXP D 1 Bright A_Explode;
		BEXP E 1 Bright;
		TNT1 A 0 A_SpawnItemEx("AfterBarrelEX");
		TNT1 A 0
		{
		for (int i = random(40,45); i > 0; i--)
		{
		A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-20,20),frandom(-20,20),frandom(-20,20));
		}
		}

		TNT1 A 1050 Bright A_BarrelDestroy;
		TNT1 A 5 A_Respawn;
		Wait;
	}
}






Class HC_TechLamp : Actor replaces TechLamp
{
	Default
		{
			Health 450;
			Radius 16;
			Height 80;
			Mass 9999999;
			
			+SOLID;
			+SHOOTABLE;
			+NOBLOOD;
			+ACTIVATEMCROSS;
			+DONTGIB;
			+NOICEDEATH;
			-ISMONSTER;
			
			DeathSound "none";
		}
	States
		{
		Spawn:
			TLMP ABCD 4 Bright A_JumpIfHealthLower(400,"Broken1");
			TNT1 A 0 A_JumpIfHealthLower(400,"Broken1");
			Loop;
			
			
			
			
		Broken1:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropGlass",0,0,70,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop1:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,60,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,60,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,60,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLMP E 1;
			TNT1 A 0 A_JumpIfHealthLower(325,"Broken2");
			Loop;
			
			
			
			
		Broken2:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,70,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop2:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,55,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,55,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,55,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLMP F 1;
			TNT1 A 0 A_JumpIfHealthLower(232,"Broken3");
			Loop;
			
			
			
		Broken3:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,45,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop3:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,30,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,30,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,30,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLMP G 1;
			TNT1 A 0 A_JumpIfHealthLower(100,"Broken4");
			Loop;
			
			
			
			
		Broken4:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,30,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop3:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,20,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,20,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,20,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLMP H 1;
			TNT1 A 0 A_JumpIfHealthLower(0,"Death");
			Loop;
			
			
		Death:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(15,30); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,20,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0 A_NoBlocking;
			TLMP I 1;
			TLMP I -1;
			Stop;
		}
}




Class HC_TechLamp2 : Actor replaces TechLamp2
{
	Default
	{
		Health 300;
		Radius 16;
		Height 60;
		Mass 9999999;
		
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		-ISMONSTER;
		
		DeathSound "none";
	}
	States
		{
		Spawn:
			TLP2 ABCD 4 Bright A_JumpIfHealthLower(280,"Broken1");
			TNT1 A 0 A_JumpIfHealthLower(280,"Broken1");
			Loop;
			
			
			
			
		Broken1:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropGlass",0,0,50,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop1:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,45,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,45,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,45,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLP2 E 1;
			TNT1 A 0 A_JumpIfHealthLower(200,"Broken2");
			Loop;
			
			
			
			
		Broken2:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop2:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,40,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLP2 F 1;
			TNT1 A 0 A_JumpIfHealthLower(150,"Broken3");
			Loop;
			
			
			
		Broken3:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,35,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop3:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,30,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,30,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,30,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLP2 G 1;
			TNT1 A 0 A_JumpIfHealthLower(100,"Broken4");
			Loop;
			
			
			
			
		Broken4:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(10,15); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,30,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
		Loop3:
			TNT1 A 0 A_Jump(250,5);
			TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
			TNT1 A 0
			{
				for (int i = random(1,4); i > 0; i--)
				{
					A_SpawnItemEx("RocketSmokeTrail",0,0,20,frandom(-1,1),frandom(-1,1),2);
				}
			}
			TNT1 A 0
			{
				for (int i = random(1,3); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesBig",0,0,20,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0
			{
				for (int i = random(0,1); i > 0; i--)
				{
					A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,20,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TLP2 H 1;
			TNT1 A 0 A_JumpIfHealthLower(0,"Death");
			Loop;
			
			
		Death:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
			TNT1 A 0
			{
				for (int i = random(15,30); i > 0; i--)
				{
					A_SpawnItemEx("PropMetal",0,0,20,frandom(-5,5),frandom(-5,5),frandom(-5,5));
				}
			}
			TNT1 A 0 A_NoBlocking;
			TLP2 I 1;
			TLP2 I -1;
			Stop;
		}
}




Class HC_TechPillar : Actor replaces TechPillar
{
	Default
	{
		Health 500;
		Radius 16;
		Height 128;
		Mass 9999999;
		
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		-ISMONSTER;
		
		DeathSound "none";
	}
	States
	{
	Spawn:
		ELEC A 1;
		TNT1 A 0 A_JumpIfHealthLower(450,"Broken1");
		Loop;
		
		
		
	Broken1:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(2,5); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,40,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
	Loop1:
		TNT1 A 0 A_Jump(250,5);
		TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
		TNT1 A 0
		{
			for (int i = random(1,4); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,55,frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesBig",0,0,55,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,55,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		ELEC B 1;
		TNT1 A 0 A_JumpIfHealthLower(380,"Broken2");
		Loop;
		
		
		
	Broken2:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0 A_SpawnItemEx("HC_TechPillarPiece",0,0,128,frandom(-3,3),frandom(-3,3),frandom(-1,1));
		TNT1 A 0
		{
			for (int i = random(10,20); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,38,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
	Loop2:
		TNT1 A 0 A_Jump(250,5);
		TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
		TNT1 A 0
		{
			for (int i = random(1,4); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,55,frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesBig",0,0,55,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,55,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		ELEC C 1;
		TNT1 A 0 A_JumpIfHealthLower(290,"Broken3");
		Loop;
		
		
		
	Broken3:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(15,30); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,60,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
	Loop2:
		TNT1 A 0 A_Jump(250,5);
		TNT1 A 0 A_StartSound("Prop/Sparks",CHAN_6,0,.4);
		TNT1 A 0
		{
			for (int i = random(1,4); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,50,frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesBig",0,0,50,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,50,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		ELEC D 1;
		TNT1 A 0 A_JumpIfHealthLower(1,"Broken4");
		Loop;
		
		
	Death:
	Broken4:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(15,30); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,50,frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0 A_NoBlocking;
		ELEC E 1;
		ELEC E -1;
		Stop;
	}
}

Class HC_TechPillarPiece : actor
{

	int roll;
	
	Default
	{
		Radius 16;
		Height 40;
		
		bouncefactor 0.5;
		wallbouncefactor 0.4;
		bouncecount 1;
		bouncetype "Doom";
		
		projectile;
		-NOGRAVITY
		//-NOBLOCKMAP
		+NOTELEPORT
		//+THRUACTORS
		+DROPOFF
		+FLOORCLIP
		+BOUNCEONACTORS
		+FORCEXYBILLBOARD
		+ROLLSPRITE
		
		DeathSound "none";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 {invoker.roll = invoker.roll + 180;}
	Rotate:
		TNT1 A 0;
		TNT1 A 0 {invoker.roll = invoker.roll + 10;}
		TNT1 A 0;
		ELEC G 1 A_SetRoll(invoker.roll,SPF_INTERPOLATE);
		Loop;
		
	Death:
		TNT1 A 0 A_SpawnItemEx("HC_TechPillarHead");
		TNT1 A 1;
		//TNT1 A 0 A_SetRoll(0,SPF_INTERPOLATE);
		//ELEC G 1 {bFORCEXYBILLBOARD = false;}
		Stop;
	}
}

Class HC_TechPillarHead : actor
{
	Default
	{
		Health 50;
		Radius 10;
		Height 42;
		Mass 200;
		
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		-ISMONSTER;
		
		DeathSound "none";
	}
	States
	{
	Spawn:
		ELEC G 1;
		Loop;
		
	Death:
		TNT1 A 0 A_StartSound("Prop/Metal/Break",CHAN_7,0,1);
		TNT1 A 0
		{
			for (int i = random(30,50); i > 0; i--)
			{
				A_SpawnItemEx("PropMetal",0,0,frandom(2,30),frandom(-5,5),frandom(-5,5),frandom(-5,5));
			}
		}
		TNT1 A 0
		{
			for (int i = random(10,15); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,frandom(2,30),frandom(-1,1),frandom(-1,1),2);
			}
		}
		TNT1 A 1;
		Stop;
	}
}