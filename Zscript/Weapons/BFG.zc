
//Tracers	421
//FX		768

Class HideousAnnihilator : HellCrusherW Replaces BFG9000
{
	Default {
	Weapon.BobRangeX 0.2;//0.5;
	Weapon.BobRangeY 0.4;//0.4;
	
	//Radius
	Height 20;
	Weapon.SelectionOrder 2800;
	
	Weapon.AmmoUse 40;
	Weapon.AmmoGive 40; //80;
	Weapon.AmmoType "HC_Cell";
	
	Inventory.PickupSound "BFGGet";
	Inventory.PickupMessage "You got the BFG-100,000! Oh, yes, the Hideous Annihilator...";
	Tag "Hideous Annihilator";
	
	+WEAPON.NOAUTOFIRE
	+WEAPON.NOALERT
	}
	States
	{
	BFGidlenoise:
		TNT1 A 0 A_StartSound("BFGidle",CHAN_5,CHANF_LOOP,.6);
	Ready:
		TNT1 A 0 A_SetCrosshair(53);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		XBCE A 1 A_WeaponReady;
		Loop;
	
	Ready3:
		TNT1 A 1 A_Jump(255, "Ready3");
	
	Select:
		TNT1 A 0 A_StartSound("BFGup",CHAN_7,0,.8);
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 A_SetCrosshair(53);
		XBFU ABC 1 {A_WeaponReady(WRF_NOFIRE);	A_OverlayRotate(0,0);	A_WeaponOffset(0,32);}
		Goto BFGidlenoise;
	
	Deselect:
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 A_StopSound(CHAN_5);
		XBFU CBA 1 Offset(0,32);
		TNT1 A 0 A_Lower;
		Wait;
		
	DeselectQuickMelee:
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 A_StopSound(CHAN_5);
		XBFU CA 1 Offset(0,32);
		Goto QuickMeleeStart;
	
	Feel:
		TNT1 A 0 A_QuakeEx(1,1,1,34,0,100,"*");
		TNT1 A 0 A_SetPitch(pitch-7);
		TNT1 A 1 A_ZoomFactor(0.75);
		TNT1 A 0 A_SetPitch(pitch-2);
		TNT1 A 1 A_ZoomFactor(0.75);
		TNT1 A 0 A_SetPitch(pitch-1);
		TNT1 A 1 A_ZoomFactor(0.75);
		TNT1 A 0 A_SetPitch(pitch+1);
		TNT1 A 1 A_ZoomFactor(0.76);
		TNT1 A 0 A_SetPitch(pitch+1);
		TNT1 A 1 A_ZoomFactor(0.77);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.78);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.80);
		TNT1 A 0 A_SetPitch(pitch+4);
		TNT1 A 1 A_ZoomFactor(0.83);
		TNT1 A 1 A_ZoomFactor(0.87);
		TNT1 A 1 A_ZoomFactor(0.90);
		TNT1 A 1 A_ZoomFactor(0.94);
		TNT1 A 1 A_ZoomFactor(0.98);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
		
	AltFeel:
		TNT1 A 0 A_QuakeEx(1,1,1,34,0,100,"*");
		TNT1 A 1 A_ZoomFactor(0.80);
		TNT1 A 1 A_ZoomFactor(0.81);
		TNT1 A 1 A_ZoomFactor(0.83);
		TNT1 A 1 A_ZoomFactor(0.85);
		TNT1 A 1 A_ZoomFactor(0.87);
		TNT1 A 1 A_ZoomFactor(0.91);
		TNT1 A 1 A_ZoomFactor(0.94);
		TNT1 A 1 A_ZoomFactor(0.97);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
	
	Fire:
		
		//TNT1 A 0 A_StopSound(CHAN_5);
		TNT1 A 0 A_StartSound("BFGChargeD16",CHAN_7,0,.7);
		
		XBCE B 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE C 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE D 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE E 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE F 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE G 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE H 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE I 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE J 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE K 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE L 1 A_WeaponOffset(Random(-1,1),Random(33,34),WOF_INTERPOLATE);
		XBCE M 1 A_WeaponOffset(Random(-1,1),Random(33,34),WOF_INTERPOLATE);
		XBCE N 1 A_WeaponOffset(Random(-1,1),Random(34,35),WOF_INTERPOLATE);
		
	FullAuto:
		
		XBCE O 1 A_WeaponOffset(Random(-1,1),Random(35,37),WOF_INTERPOLATE);
		XBCE P 1 A_WeaponOffset(Random(-2,2),Random(35,37),WOF_INTERPOLATE);
		XBCE Q 1 A_WeaponOffset(Random(-2,2),Random(36,38),WOF_INTERPOLATE);
		XBCE B 1 A_WeaponOffset(Random(-2,2),Random(36,38),WOF_INTERPOLATE); //17
		
		
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		
		TNT1 A 0 A_StartSound("BFGFireD16",CHAN_6,0,1);
		TNT1 A 0 A_StartSound("BFGFireD16",10,0,0.1);
		
		TNT1 A 0 A_FireProjectile("HC_BFGBall");
		TNT1 A 0 A_Overlay(-5,"Feel");
		TNT1 A 0 A_AlertMonsters;
		
		XBFE A 1 BRIGHT A_WeaponOffset(Random(-3,3),Random(60,65),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE B 1 BRIGHT A_WeaponOffset(Random(-3,3),Random(58,63),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE C 1 BRIGHT A_WeaponOffset(Random(-2,2),Random(54,56),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE D 1 A_WeaponOffset(Random(-1,1),Random(54,56),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE E 1 A_WeaponOffset(Random(-1,1),Random(50,54),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE F 1 A_WeaponOffset(Random(-1,1),Random(48,50),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE G 1 A_WeaponOffset(Random(-1,1),Random(47,49),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE H 1 A_WeaponOffset(Random(-1,1),Random(44,47),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE I 1 A_WeaponOffset(Random(-1,1),Random(40,40),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE J 1 A_WeaponOffset(Random(-1,1),Random(33,35),WOF_INTERPOLATE); //10
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		
		TNT1 A 0 A_Refire("FullAuto");
		
		XBFE K 1 A_WeaponOffset(Random(-1,1),Random(32,34),WOF_INTERPOLATE); //10
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE L 1;
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE M 1;
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBCE A 1; //3
		
		Goto BFGidlenoise;
		
	AltFire:
		TNT1 A 0 A_JumpIfInventory("HC_Cell",2,1);
		Goto Ready;
		
		TNT1 A 0 A_StartSound("BFGLazorChargeAdd",4,0,.8);
		TNT1 A 0 A_StartSound("BFGLazorCharge",6,0,.8);
		//TNT1 A 0 A_StartSound("BFGChargeD16",7,0,.7);
		
		XBCE B 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE C 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE D 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE E 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE F 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE G 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE H 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE I 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE J 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE K 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		XBCE L 1 A_WeaponOffset(Random(-1,1),Random(33,34),WOF_INTERPOLATE);
		XBCE M 1 A_WeaponOffset(Random(-1,1),Random(33,34),WOF_INTERPOLATE);
		XBCE N 1 A_WeaponOffset(Random(-1,1),Random(34,35),WOF_INTERPOLATE);
		XBCE O 1 A_WeaponOffset(Random(-1,1),Random(35,37),WOF_INTERPOLATE);
		XBCE P 1 A_WeaponOffset(Random(-2,2),Random(35,37),WOF_INTERPOLATE);
		XBCE Q 1 A_WeaponOffset(Random(-2,2),Random(36,38),WOF_INTERPOLATE);
		XBCE B 1 A_WeaponOffset(Random(-2,2),Random(36,38),WOF_INTERPOLATE);
		
		TNT1 A 0 A_StartSound("BFGLazorStart",4,0,.8);
		
		TNT1 A 0 A_StartSound("BFGLazorShoot",6,CHANF_LOOP,1);
		TNT1 A 0 A_StartSound("BFGLazorAdd",7,CHANF_LOOP,1);
		
		
	Peeww:
		TNT1 A 0 A_JumpIf(CountInv("HC_Cell") == 0,"EndPeeww");
		TNT1 A 0 A_JumpIf(CountInv("HC_Cell") == 1,"EndPeeww");
		
		
		
		TNT1 A 0 A_Overlay(-5,"AltFeel");
		
		TNT1 A 0 A_AlertMonsters;
		
		TNT1 A 0 A_TakeInventory("HC_Cell", 1);
		TNT1 A 0 A_RailAttack(100,0,True,"","",RGF_SILENT|RGF_FULLBRIGHT,0,"BFG_ALT_PUFF",0,0,0,0,64,0,"BFG_ALT_LASER",-10);
		TNT1 A 0 A_FireBullets (0, 0, 1, 0, "BFG_ALT_PUFF",0);
		XBFE A 1 BRIGHT A_WeaponOffset(Random(-3,3),Random(60,65),WOF_INTERPOLATE);
		
		TNT1 A 0 A_TakeInventory("HC_Cell", 1);
		TNT1 A 0 A_RailAttack(100,0,True,"","",RGF_SILENT|RGF_FULLBRIGHT,0,"BFG_ALT_PUFF",0,0,0,0,64,0,"BFG_ALT_LASER",-10);
		TNT1 A 0 A_FireBullets (0, 0, 1, 0, "BFG_ALT_PUFF",0);
		XBFE B 1 BRIGHT A_WeaponOffset(Random(-3,3),Random(58,63),WOF_INTERPOLATE);
		
		TNT1 A 0 A_Refire("Peeww");
		
	EndPeeww:
		
		TNT1 A 0 A_StartSound("BFGLazorStop",6,0,.8);
		
		TNT1 A 0 A_StopSound(CHAN_7);
		
		XBFE C 1 BRIGHT A_WeaponOffset(Random(-2,2),Random(54,56),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE D 1 A_WeaponOffset(Random(-1,1),Random(54,56),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE E 1 A_WeaponOffset(Random(-1,1),Random(50,54),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE F 1 A_WeaponOffset(Random(-1,1),Random(48,50),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE G 1 A_WeaponOffset(Random(-1,1),Random(47,49),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE H 1 A_WeaponOffset(Random(-1,1),Random(44,47),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE I 1 A_WeaponOffset(Random(-1,1),Random(40,40),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE J 1 A_WeaponOffset(Random(-1,1),Random(33,35),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE K 1 A_WeaponOffset(Random(-1,1),Random(32,34),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE L 1;
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBFE M 1;
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		XBCE A 1;
		Goto BFGidlenoise;
	
	Spawn:
		BD16 A -1;
		Stop;
	
  }
}

class HC_BFGBall : Actor
{
	Array<Actor> BFGTracerTargets;
	Default
	{
		Radius 13;
		Height 8;
		Speed 25;
		DamageFunction 900; //200
		Projectile;
		+EXTREMEDEATH
		+RANDOMIZE
		+ZDOOMTRANS
		+FORCEXYBILLBOARD
		RenderStyle "Add";
		Alpha 0.75;
		Obituary "$OB_MPBFG_BOOM";
		//DamageType "Desintegrate";
		Decal "BFGLightning3";
	}
	
	Override Int DoSpecialDamage(Actor Target, Int Damage, Name DamageType)
	{
		If (Target.bBOSS)
		{
			If (Target == Tracer)
			{
				Target.A_GiveInventory("PowerBFGStunned");
			}
			Damage /= 2;
		}
		Return Damage;
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("BFGBall",CHAN_5,CHANF_LOOP,.7);
		BFGballFly:
		
		TNT1 A 0 A_SpawnItemEx("BFGLightningTracerSpawner", 0, 0, -16, -Vel.X, -Vel.Y, -Vel.Z, 0, SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_SETMASTER|SXF_ORIGINATOR);
		BFS1 A 1 Bright A_SpawnItemEx("BFGTail",0,0,12,random(-1,1),random(-1,1),random(-1,1));
		TNT1 A 0 A_SpawnItemEx("BFGLightningTracerSpawner", 0, 0, -16, -Vel.X, -Vel.Y, -Vel.Z, 0, SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_SETMASTER|SXF_ORIGINATOR);
		BFS1 A 1 Bright A_SpawnItemEx("BFGTail",0,0,12,random(-1,1),random(-1,1),random(-1,1));
		TNT1 A 0 A_SpawnItemEx("BFGSmallSparkle",random(-75,75),random(-75,75),random(-75,75));
		TNT1 AA 0 A_SpawnItemEx("BFGMiniSparkle",random(-100,100),random(-100,100),random(-100,100),random(-3,3),random(-3,3),random(-3,3));
		
		TNT1 A 0 A_SpawnItemEx("BFGSpark",random(-10,10),random(-10,10),random(-10,10));
		
		TNT1 A 0 A_SpawnItemEx("BFGLightningTracerSpawner", 0, 0, -16, -Vel.X, -Vel.Y, -Vel.Z, 0, SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_SETMASTER|SXF_ORIGINATOR);
		BFS1 A 1 Bright A_SpawnItemEx("BFGTail",0,0,12,random(-1,1),random(-1,1),random(-1,1));
		TNT1 A 0 A_SpawnItemEx("BFGLightningTracerSpawner", 0, 0, -16, -Vel.X, -Vel.Y, -Vel.Z, 0, SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_SETMASTER|SXF_ORIGINATOR);
		BFS1 A 1 Bright A_SpawnItemEx("BFGTail",0,0,12,random(-1,1),random(-1,1),random(-1,1));
		
		TNT1 A 0 A_SpawnItemEx("BFGBigSparkle",random(-50,50),random(-50,50),random(-50,50));
		TNT1 A 0 A_SpawnItemEx("BFGMiniSparkle",random(-100,100),random(-100,100),random(-100,100),random(-3,3),random(-3,3),random(-3,3));
		Loop;
		
		
		
	Death:
		TNT1 A 0 A_Explode(1200, 1200, 0, 1, 1200);
	
		TNT1 A 0 A_StartSound("BFGballexplode",CHAN_5,0,1);
		TNT1 A 0 A_StartSound("BFGballexplodeadd",CHAN_6,0,1);
		TNT1 A 0 A_StartSound("BFGBall/Explode/Distant",CHAN_7,0,1);
		//TNT1 A 0 A_BFGSpray("AltBFGExtra", 160, 15, 360, 2048, 90, 0, BFGF_MISSILEORIGIN);
		
		TNT1 A 0 A_SpawnItemEx("BFGSFX");
		
		TNT1 AA 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		
		TNT1 AAAA 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		
		TNT1 AAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-15,15),random(-15,15),random(-15,15));
		
		
		
		TNT1 A 0
		{
			for (int i = random(50,60); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-20,20),frandom(-20,20),frandom(-20,20));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(20,30); i > 0; i--)
			{
				A_SpawnItemEx("ExplosiveDebris",0,0,0,frandom(-30,30),frandom(-30,30),frandom(-30,30));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("BIGExplosionShockWave",0,0,0,0,0,0);
			}
		}
		
		BFE1 A 1 Bright A_SetScale(3);
		
		TNT1 AAAA 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 AAAAAA 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 B 1 Bright A_SetScale(3);
		
		TNT1 AAA 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 AAAAAAA 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 B 1 Bright A_SetScale(3);
		
		TNT1 AA 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 AAAAAAAAA 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 C 1 Bright A_SetScale(3);
		
		TNT1 AA 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 AAAAAAA 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 C 1 Bright A_SetScale(3);
		
		TNT1 A 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 AAAAAA 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 D 1 Bright A_SetScale(3);
		
		TNT1 A 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 A 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 D 1 Bright A_SetScale(3);
		
		TNT1 A 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 A 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 E 1 Bright A_SetScale(3);
		
		TNT1 A 0 A_SpawnItemEx("BFGBigSparkle",random(-100,100),random(-100,100),random(-100,100));
		TNT1 A 0 A_SpawnItemEx("BFGSmallSparkle",random(-125,125),random(-125,125),random(-125,125));
		TNT1 AAAAAAAAAAAAA 0 A_SpawnItemEx("BFGMiniSparkle",random(-150,150),random(-150,150),random(-150,150),random(-10,10),random(-10,10),random(-10,10));
		
		BFE1 F 1 Bright A_SetScale(3);
		
		
		Stop;
	}
}

class AltBFGExtra : Actor
{
	Default
	{	
		+EXTREMEDEATH
		+NOBLOCKMAP
		+NOGRAVITY
		+FORCEXYBILLBOARD
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 0.75;
		//DamageType "Desintegrate";
		//DamageType "BFGSplash";
	}
	States
	{
	Spawn:
		BFE2 ABCD 1 Bright;
		Stop;
	}
}

//////////////////////////////////////Tracers

Class LightningBeamBase : Actor //Borrowed from EOA and ZION with permission from Doom Krakken.
{
	Int Dist[2];
	Int Stats[3]; //0 - Step Dist; 1 - Max Dist; 2 - Random Turn
	Default
	{
		Radius 1;
		Height 1;
		RenderStyle "Add";
		+CANNOTPUSH
		+DONTSPLASH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOBLOCKMONST
		+NOINTERACTION
		+NOTRIGGER
		+THRUACTORS
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			If (Tracer)
			{
				Dist[1] = Distance3D(Tracer);
				Stats[0] = 64;
				Stats[1] = 1200;
				Stats[2] = 8;
				Return ResolveState(Null);
			}
			Return ResolveState("Null");
		}
	Fly:
		TNT1 A 0 
		{
			A_Face(Tracer, 0, 0, 180, 180, FAF_MIDDLE);
			If ((Dist[0] >= Dist[1]) || (Dist[0] >= Stats[1]))
			{
				Return ResolveState("Null");
			}
			A_SetPitch(Pitch + frandom(-Stats[2], Stats[2]));
			A_SetAngle(Angle + frandom(-Stats[2], Stats[2]));
			If (Distance3D(Tracer) < Stats[0] + 10)
			{
				A_Face(Tracer, 0, 0, 180, 180, FAF_MIDDLE);
			}
			If (Distance3D(Tracer) < Stats[0] * 0.75)
			{
				Return ResolveState("XDeath"); 
			}
			Dist[0] += Stats[0];
			Return A_Jump(256, "Missile");
		}
	Missile:
		TNT1 A 0
		{
			A_SpawnItemEx("LightningBeamTrailBase", cos(-Pitch) * (Stats[0] / 2), 0, sin(Pitch) * (Stats[0] / 2), cos(-Pitch) * (Stats[0] * 0.0001), 0, sin(Pitch) * (Stats[0] * 0.0001), 0, SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_TRANSFERALPHA);
			Return A_Jump(256, "Move");
		}
		Goto Move;
	Move:
		TNT1 A 0 A_Warp(AAPTR_DEFAULT, cos(-Pitch) * Stats[0], 0, sin(Pitch) * Stats[0], 0, WARPF_NOCHECKPOSITION, "Fly");
		TNT1 A 0 A_Jump(256, "Death");
	XDeath:
		TNT1 A 0
		{
			A_Warp(AAPTR_TRACER, 0, 0, 0, 0, WARPF_NOCHECKPOSITION);
			Return A_Jump(256, "XDeathAnim");
		}
		Stop;
	Death:
		TNT1 A 0
		{
			A_Warp(AAPTR_TRACER, 0, 0, 0, 0, WARPF_NOCHECKPOSITION);
			Return A_Jump(256, "DeathAnim");
		}
		Stop;
	XDeathAnim:
	DeathAnim:
		TNT1 A 1;
		Stop;
	}
}

Class LightningBeamTrailBase : Actor
{
	Default
	{
		RenderStyle "Add";
		Scale 0.25;
		Alpha 0.75;
		+BRIGHT
		+CANNOTPUSH
		+DONTSPLASH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOBLOCKMONST
		+NOINTERACTION
		+NOTRIGGER
		+THRUACTORS
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256, random(1, 3));
		TFOG FGH 0 A_Jump(256,"Fade");
	Fade:
		"####" "#" 2;
		Stop;
	}
}

Class BFGLightningTracer : LightningBeamBase
{
	Default
	{
		//Translation "0:255=%[0, 0, 0]:[0.75, 1, 0.45]";
		+EXTREMEDEATH
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			If (Tracer)
			{
				Dist[1] = Distance3D(Tracer);
				Stats[0] = 64; //64
				Stats[1] = 10000; //900
				Stats[2] = 12;
				Return ResolveState(Null);
			}
			Return ResolveState("Null");
		}
		Goto Fly;
	Missile:
		TNT1 A 0
		{
			A_SpawnItemEx("BFGLightningTracerFX", cos(-Pitch) * (Stats[0] / 2), 0, sin(Pitch) * (Stats[0] / 2), cos(-Pitch) * (Stats[0] * 0.0001), 0, sin(Pitch) * (Stats[0] * 0.0001), 0, SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION);
			Return A_Jump(256, "Move");
		}
		Goto Move;
	}
}

Class BFGLightningTracerFX : LightningBeamTrailBase
{
	Default
	{
		Translation "0:255=%[0, 0, 0]:[0, 1, 0]";
	}
}

Class EOA_BFGTracerDamager : Thinker
{
	Actor Owner; //The actor it's attached to.
	Actor Source; //The actor responsible for dealing the damage.
	Actor Inflictor; //The actor that actually dealt the damage.
	Int Damage; //The damage to deal.
	Int TicDelay; //The tic delay.
	Override Void PostBeginPlay()
	{
		TicDelay = random(3, 35);
		Super.PostBeginPlay();
	}
	Override Void Tick()
	{
		If (Owner)
		{
			If (!Level.IsFrozen() && TicDelay-- <= 0)
			{
				Owner.DamageMobj(Inflictor, Source, Damage, "Normal", DMG_NO_PAIN);
				Destroy();
				Return;
			}
		}
		Else
		{
			Destroy();
		}
	}
}

Class ZSTracerRetriever : Actor
{
	Int Index;
	Action Bool AcquireTracerTargets(Int Dist, Double Ang)
	{
		Let BFGOwner = HC_BFGBall(Target); //EOA_BFGBall
		If (BFGOwner)
		{
			Tracer = Null;
			A_CopyFriendliness(AAPTR_MASTER);
			If (Invoker.Index < BFGOwner.BFGTracerTargets.Size() && BFGOwner.BFGTracerTargets[Invoker.Index] && !BFGOwner.BFGTracerTargets[Invoker.Index].bKILLED && BFGOwner.BFGTracerTargets[Invoker.Index].Distance3D(Invoker) <= Dist)
			{
				Tracer = BFGOwner.BFGTracerTargets[Invoker.Index];
				If (Tracer && CheckIfTargetInLOS(Ang, JLOSF_ALLYNOJUMP|JLOSF_CHECKTRACER, Dist))
				{
					Return True;
				}
				Else //[DoomKrakken]: Check through all other entries on the list.
				{
					For (Int i = 0; i < BFGOwner.BFGTracerTargets.Size(); i++)
					{
						Tracer = BFGOwner.BFGTracerTargets[i];
						If (Tracer && CheckIfTargetInLOS(Ang, JLOSF_ALLYNOJUMP|JLOSF_CHECKTRACER, Dist))
						{
							Return True;
						}
					}
					Tracer = Null;
				}
			}
			If (Master && !Tracer)
			{
				A_ClearTarget();
				A_LookEx(LOF_NOSOUNDCHECK|LOF_NOJUMP, 0, Dist, 0, Ang);
				If (Target && CheckIfTargetInLOS(Ang, JLOSF_ALLYNOJUMP, Dist) && Invoker.Distance3D(Target) <= Dist)
				{
					Tracer = Target;
					Target = BFGOwner;
					BFGOwner.BFGTracerTargets.Push(Tracer);
					Return True;
				}
				Target = BFGOwner;
			}
		}
		Invoker.Index++;
		Return False;
	}
	Action Void EOA_DamageTracerTarget(Int Damage, Int Inflictor = AAPTR_DEFAULT, Int Source = AAPTR_DEFAULT)
	{
		If (Tracer)
		{
			EOA_BFGTracerDamager BFGDamager = New("EOA_BFGTracerDamager");
			If (BFGDamager)
			{
				BFGDamager.Owner = Tracer;
				BFGDamager.Damage = Damage;
				BFGDamager.Inflictor = GetPointer(Inflictor);
				BFGDamager.Source = GetPointer(Source);
			}
		}
	}
}

//creds to ZION
Class BFGLightningTracerSpawner : ZSTracerRetriever
{
	Default
	{
		Projectile;
		Radius 1;
		Radius 1;
		ReactionTime 6;  //6; /// NUMBER OF TRACERS * AcquireTracerTargets angle = 360
		MissileHeight 0;
		+EXTREMEDEATH
		+NODAMAGETHRUST
		+NOINTERACTION
		+PAINLESS
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_RearrangePointers(AAPTR_MASTER, AAPTR_TARGET);
	See:
		TNT1 A 0 
		{
			If (AcquireTracerTargets(10000, 60)) //600 //60
			{
				Return ResolveState(Null);
			}
			Return ResolveState("Turnito");
		}
	Missile:
		TNT1 A 0
		{
			A_SpawnItemEx("BFGLightningTracer", 0, 0, 16, Flags: SXF_TRANSFERPOINTERS);
			EOA_DamageTracerTarget(24, AAPTR_TARGET, AAPTR_MASTER);
		}
	Turnito:
		TNT1 A 0
		{
			A_SetAngle(Angle + 60);
			A_CountDown();
		}
		Goto See;
	}
}

Class PowerBFGStunned : Powerup
{
	Default
	{
		Powerup.Duration -5;
		DamageFactor "Normal", 2.0;
		//+EOA_POWERUP.NOLIGHT
	}
	Override Void AttachToOwner(Actor Other)
	{
		//ActiveSound = "BFG/Stun";
		//ExpireSound = "BFG/StunEnd";
		Super.AttachToOwner(Other);
		/*
		If (NoiseMaker)
		{
			NoiseMaker.A_StartSound("BFG/StunLightning", 4, CHAN_LOOP|CHAN_OVERLAP);
		}
		*/
	}
	Override Void ModifyDamage(Int Damage, Name DamageType, Out Int NewDamage, Bool Passive)
	{
		If (Passive && Damage > 0)
		{
			NewDamage = max(0, ApplyDamageFactors(GetClass(), DamageType, Damage, Damage / 4));
		}
	}
	Override Void DoEffect()
	{
		If (EffectTics < 0)
		{
			Destroy();
			Return;
		}
		If (!(GetAge() % 5))
		{
			Owner.A_SpawnItemEx("AltBFGExtra", ZOfs: Owner.Height / 2, XVel: frandom(-3, 3), YVel: frandom(-3, 3), ZVel: frandom(-3, 3), Flags: SXF_NOCHECKPOSITION); //BFGStunLightning
		}
		Owner.bFORCEPAIN = True;
		Owner.A_DamageSelf(-1, Flags: DMSS_FOILINVUL|DMSS_NOFACTOR|DMSS_NOPROTECT);
		Owner.A_DamageSelf(1, Flags: DMSS_FOILINVUL|DMSS_NOFACTOR|DMSS_NOPROTECT);
		If (Owner)
		{
			Owner.bFORCEPAIN = Owner.Default.bFORCEPAIN;
		}
		Powerup.DoEffect(); //[DoomKrakken]: Not Super, because it calls unnecessary stuff we can skip.
	}
}

//////////////////////////////////////FX

Class BFGSFX : Actor
{
  States
  {
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_QuakeEx(1,1,1,20,0,500,"*");
		TNT1 A 60;
		Stop;
  }
}

class BFGBigSparkle : HC_FXClass
{
	Default
	{	
		Scale 1;
		+EXTREMEDEATH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOGRAVITY
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
	Spawn:
		BFE1 ABCDEF 2 Bright;
		Stop;
	}
}

class BFGSmallSparkle : HC_FXClass
{
	Default
	{	
		Scale 1;
		+EXTREMEDEATH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOGRAVITY
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
	Spawn:
		BFE2 ABCD 2 Bright;
		Stop;
	}
}

class BFGMiniSparkle : HC_FXClass
{
	Default
	{	
		Radius 4;
		Height 4;
		Scale 1;
		+EXTREMEDEATH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOGRAVITY
		+ZDOOMTRANS
		projectile;
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
	Spawn:
		BFE2 D random(150,175) Bright;
	Death:
	XDeath:
		BFE2 D 1 A_Fadeout(0.01);
		Loop;
	}
}

class BFGTail : HC_FXClass
{
	Default
	{	
		Scale 1;
		+EXTREMEDEATH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOGRAVITY
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
	Spawn:
		BFE2 ABCDE random(5,10) Bright A_FadeOut(0.2);
		Stop;
	}
}

class BFGSpark : HC_FXClass
{
	Default
	{
		Scale 0.25;
		+EXTREMEDEATH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOGRAVITY
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Jump(255,"spark");
		BFE2 C 3;
		Stop;
	
	spark:
		BFE2 C 3 A_SpawnItemEx("BFGSpark",random(-5,5),random(-5,5),random(-5,5));
		Stop;
		
		
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////ALT FIRE

class BFG_ALT_LASER : actor
{
	Default
		{
		Scale 4.0;
		Alpha 0.001;
		+FORCERADIUSDMG;
		+RANDOMIZE;
		+EXTREMEDEATH;
		+NOINTERACTION;
		+BRIGHT;
		RenderStyle "add";
		}
	States
	{
	Spawn:
		BALT A 0;
		TNT1 A 0 A_Jumpif((Distance3d(target) >= 1200),"NoLazor");
		BALT A 1
		{
			A_FadeIn(frandom(0.25, 0.65), 0);
			A_QuakeEx(1,1,1,10,0,100,"none",QF_SCALEDOWN);
			A_SetScale(Scale.X-Frandom(-0.1,0.5));
		}
		stop;
		
	NoLazor:
		TNT1 A 1
		{
			A_QuakeEx(1,1,1,10,0,100,"none",QF_SCALEDOWN);
		}
		Stop;
	}
}

Class BFG_ALT_PUFF : HC_BulletPuff
{	
	Default
	{
	Decal "Scorch";
	DamageType "PlayerGauss";
	+EXTREMEDEATH
	+NODAMAGETHRUST
	}
	
		States
	{
	Spawn:
		TNT1 A 0;
		
		
		TNT1 A 0
		{
			for (int i = random(0,1); i > 0; i--)
			{
				A_SpawnItemEx("BFGBigSparkle",0,0,0,frandom(-6,6),frandom(-6,6),frandom(-6,6));
			}
		}
		
		
		
		TNT1 A 0
		{
			for (int i = random(2,4); i > 0; i--)
			{
				A_SpawnItemEx("BFGMiniSparkle",0,0,0,frandom(-18,18),frandom(-18,18),frandom(-18,18));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("BFGSmallSparkle",0,0,0,frandom(-12,12),frandom(-12,12),frandom(-12,12));
			}
		}
		TNT1 A 0 A_SpawnItemEx("BFGLightningTracerSpawner", 0, 0, -16, -Vel.X, -Vel.Y, -Vel.Z, 0, SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_SETMASTER|SXF_ORIGINATOR);
		TNT1 A 0 A_Explode(128);
		
		BFE1 A 1 Bright;
		Stop;
	}
}