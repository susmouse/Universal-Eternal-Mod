Class PlasmaticLance : HellCrusherW
{
	Default {
	Weapon.BobRangeX 0.2;//0.8;
	Weapon.BobRangeY 0.5;//0.7;
	
	Weapon.SelectionOrder 100;
	Weapon.AmmoUse1 1;
	Weapon.AmmoGive1 40;
	Weapon.AmmoType1 "HC_Cell";
  
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType2 "PlasmaHeat";
	
	Inventory.PickupSound "PlasmaRifleGet";
	Inventory.PickupMessage "You got the heavy Plasmatic Lance rifle! There is nothing I like better then the smell of plasma in the morning... "; // I wonder if anyone gets this reference...
	Tag "Plasmatic Lance";
	}
	States
	{
	Ready:
		TNT1 A 0 A_SetCrosshair(55);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		HXPR A 1 A_WeaponReady;
		Loop;
	
	Ready3:
		TNT1 A 1 A_Jump(255, "Ready3");
	
	Select:
		TNT1 A 0 A_SetCrosshair(55);
		TNT1 A 0 A_StartSound("PlasmaRifleSelect",CHAN_5,0,1);
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0  A_WeaponReady(WRF_NOFIRE);
		HXPR A 1 {	A_OverlayRotate(0,18);	 				A_WeaponOffset(25,90);}
		TNT1 A 0  A_WeaponReady(WRF_NOFIRE);
		HXPR A 1 {	A_OverlayRotate(0,13,WOF_INTERPOLATE);	A_WeaponOffset(10,60,WOF_INTERPOLATE);}
		TNT1 A 0  A_WeaponReady(WRF_NOFIRE);
		HXPR A 1 {	A_OverlayRotate(0,4,WOF_INTERPOLATE); 	A_WeaponOffset(3,45,WOF_INTERPOLATE);}
		TNT1 A 0 {	A_OverlayRotate(0,0,WOF_INTERPOLATE);  	A_WeaponOffset(0,32,WOF_INTERPOLATE);}
		Goto Ready;
	
	Deselect:
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 A_ClearOverlays(-1000,99);
		TNT1 A 0 {	A_OverlayRotate(0,0);  	A_WeaponOffset(0,32);}
		HXPR A 1 {	A_OverlayRotate(0,4); 	A_WeaponOffset(3,45);}
		HXPR A 1 {	A_OverlayRotate(0,13,WOF_INTERPOLATE);	 A_WeaponOffset(10,60,WOF_INTERPOLATE);}
		HXPR A 1 {	A_OverlayRotate(0,18,WOF_INTERPOLATE);	 A_WeaponOffset(25,90,WOF_INTERPOLATE);}
		TNT1 A 0 A_Lower;
		Wait;
		
	DeselectQuickMelee:
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 A_ClearOverlays(-1000,99);
		TNT1 A 0 {	A_OverlayRotate(0,0);  	A_WeaponOffset(0,32);}
		HXPR A 1 {	A_OverlayRotate(0,4); 	A_WeaponOffset(3,45);}
		HXPR A 1 {	A_OverlayRotate(0,18,WOF_INTERPOLATE);	 A_WeaponOffset(25,90,WOF_INTERPOLATE);}
		Goto QuickMeleeStart;
	
	Feel:
		TNT1 A 0 A_QuakeEx(1,1,1,3,0,100,"*");
		TNT1 A 0 A_SetPitch(pitch-0.5);
		TNT1 A 1 A_ZoomFactor(0.95);
		TNT1 A 0 A_SetPitch(pitch+0.5);
		TNT1 A 1 A_ZoomFactor(0.96);
		//TNT1 A 0 A_SetPitch(pitch+0.5);
		TNT1 A 1 A_ZoomFactor(0.97);
		TNT1 A 1 A_ZoomFactor(0.98);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
	
	Fire:
		TNT1 A 0 A_GiveInventory("PlasmaHeat",1);
		TNT1 A 0 A_Overlay(5,"Feel");
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		TNT1 A 0 A_StartSound("PlasmaRifleFire",CHAN_5,0,.8);
		TNT1 A 0 A_FireProjectile("HC_PlasmaBall");
		TNT1 A 0 A_Jump(256,"FlashOut1","FlashOut2");
	FlashOut1:
		HXPR D 1 A_WeaponOffset(0,Random(45,48),WOF_INTERPOLATE);
		Goto FlashOutEnd;
	FlashOut2:
		HXPR F 1 A_WeaponOffset(0,Random(45,48),WOF_INTERPOLATE);
		FlashOutEnd:
	
		TNT1 A 0 A_Jump(256,"FlashIn1","FlashIn2");
	FlashIn1:
		HXPR E 1 A_WeaponOffset(Random(-1,1),Random(38,40),WOF_INTERPOLATE);
		Goto FlashInEnd;
	FlashIn2:
		HXPR G 1 A_WeaponOffset(Random(-1,1),Random(38,40),WOF_INTERPOLATE);
	FlashInEnd:
		//XHPR B 1 A_WeaponOffset(0,Random(33,39),WOF_INTERPOLATE);
		Goto Ready;
	
	AltFeel:
		TNT1 A 0 A_QuakeEx(1,1,1,9,0,100,"*");
		TNT1 A 0 A_SetPitch(pitch-1);
		TNT1 A 1 A_ZoomFactor(0.92);
		TNT1 A 0 A_SetPitch(pitch+1);
		TNT1 A 1 A_ZoomFactor(0.93);
		//TNT1 A 0 A_SetPitch(pitch+1);
		TNT1 A 1 A_ZoomFactor(0.95);
		TNT1 A 1 A_ZoomFactor(0.97);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
	
	
	AltFire:
		//TNT1 A 0 A_GiveInventory("PlasmaHeat",1);
		TNT1 A 0 A_JumpIfInventory("PlasmaHeat",1,"FireSuper");
		TNT1 A 0 A_StartSound("HeatBlastFail",CHAN_7,0,.5);
		HXPR B 5;
		HXPR A 5;
		Goto Ready;
		
		
	FireSuper:
		TNT1 A 0 A_TakeInventory("PlasmaHeat",1);
		TNT1 A 0 A_Overlay(5,"AltFeel");
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		TNT1 A 0 A_StartSound("PlasmaRifleFire",CHAN_5,0,.6);
		TNT1 A 0 A_StartSound("PlasmaAltfire",CHAN_6,0,.8);
		
		TNT1 AAA 0 A_FireProjectile("HC_GreenPlasmaBall",Frandom(-3,3),false,0,0,FPF_NOAUTOAIM,Frandom(-1,1));
		
		TNT1 A 0 A_Jump(256,"FlashOut1R","FlashOut2R");
	FlashOut1R:
		HXPR H 1 A_WeaponOffset(0,Random(45,50),WOF_INTERPOLATE);
		Goto FlashOutEndR;
	FlashOut2R:
		HXPR J 1 A_WeaponOffset(0,Random(45,50),WOF_INTERPOLATE);
		FlashOutEndR:
	
		TNT1 A 0 A_Jump(256,"FlashIn1R","FlashIn2R");
	FlashIn1R:
		HXPR I 1 A_WeaponOffset(Random(-1,1),Random(40,45),WOF_INTERPOLATE);
		Goto FlashInEndR;
	FlashIn2R:
		HXPR K 1 A_WeaponOffset(Random(-1,1),Random(40,45),WOF_INTERPOLATE);
	FlashInEndR:
		//XHPR B 1 A_WeaponOffset(0,Random(33,39),WOF_INTERPOLATE);
		//Goto Ready;
		
		TNT1 A 0 A_JumpIf(CountInv("PlasmaHeat") == 0,2);
		
		TNT1 A 0 A_Refire;
		
		TNT1 A 0 A_Overlay(15,"CoolDown");
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		//TNT1 A 49 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
		Goto Ready;
		
	CoolDown:
		
		HXPR C 1 {A_OverlayPivotAlign(0,PSPA_CENTER,PSPA_BOTTOM);					A_WeaponOffset(0,32);}
		
		HXPR C 1{														 			A_WeaponOffset(-3,36,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-12,37,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-20,36,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-40,34,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-50,32,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-64,30,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-68,20,WOF_INTERPOLATE);} //8
		
		TNT1 A 0 A_StartSound("PlasmaRifleHiss",CHAN_6,0,.5);
		HXPR C 1{														 			A_WeaponOffset(-70,20,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-68,22,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-69,21,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-70,20,WOF_INTERPOLATE);}
		HXPR C 3{														 			A_WeaponOffset(-70,20,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(random(-67,-73),random(20,24),WOF_INTERPOLATE);}
		HXPR C 20{														 			A_WeaponOffset(-70,20,WOF_INTERPOLATE);} //34
		
		HXPR C 1{														 			A_WeaponOffset(-68,20,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-64,30,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-50,32,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-40,34,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-20,36,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-12,37,WOF_INTERPOLATE);}
		HXPR C 1{														 			A_WeaponOffset(-3,36,WOF_INTERPOLATE);} //7
		
		TNT1 A 0 {																	A_WeaponOffset(0,32,WOF_INTERPOLATE);}
		
		
		Stop;
	/*
		TNT1 A 0 A_JumpIfInventory("PlasmaHeat",25,"HeatBlast");
		TNT1 A 0 A_StartSound("HeatBlastFail",CHAN_7,0,.5);
		XHPR B 5;
		XHPR F 5;
		Goto Ready;
		
	HeatBlast:
		
		TNT1 A 0 A_TakeInventory("PlasmaHeat",25);
		TNT1 A 0 A_Overlay(5,"AltFeel");
		TNT1 A 0 A_StartSound("HeatBlast",CHAN_6,0,.8);
		TNT1 A 0 A_StartSound("HeatBlastAdd",CHAN_5,0,.8);
		TNT1 A 0 A_StartSound("HeatBlastStart",CHAN_7,0,.8);
		
		TNT1 A 0 A_FireBullets(180,1,100,10,"HeatBlastPuff",FBF_USEAMMO|FBF_NOFLASH,200);
		
		XHPR L 1 A_WeaponOffset(0,Random(58,60),WOF_INTERPOLATE);
		XHPR K 1 A_WeaponOffset(0,Random(58,60),WOF_INTERPOLATE);
		XHPR K 1 A_WeaponOffset(0,Random(58,60),WOF_INTERPOLATE);
		XHPR K 1 A_WeaponOffset(0,Random(57,58),WOF_INTERPOLATE);
		XHPR J 1 A_WeaponOffset(0,Random(56,57),WOF_INTERPOLATE);
		XHPR J 1 A_WeaponOffset(0,Random(55,56),WOF_INTERPOLATE);
		XHPR J 1 A_WeaponOffset(0,Random(54,56),WOF_INTERPOLATE);
		XHPR I 1 A_WeaponOffset(0,Random(58,54),WOF_INTERPOLATE);
		XHPR I 1 A_WeaponOffset(0,Random(49,50),WOF_INTERPOLATE);
		XHPR B 1 A_WeaponOffset(0,Random(44,47),WOF_INTERPOLATE);
		XHPR J 1 A_WeaponOffset(0,Random(42,46),WOF_INTERPOLATE);
		XHPR I 1 A_WeaponOffset(0,Random(41,45),WOF_INTERPOLATE);
		XHPR B 1 A_WeaponOffset(0,Random(38,40),WOF_INTERPOLATE);
		XHPR I 1 A_WeaponOffset(0,Random(36,38),WOF_INTERPOLATE);
		XHPR B 1 A_WeaponOffset(0,Random(33,34),WOF_INTERPOLATE);
		XHPR B 1 A_WeaponOffset(0,Random(33,34),WOF_INTERPOLATE);
		XHPR B 1 A_WeaponOffset(0,Random(32,34),WOF_INTERPOLATE);
		XHPR J 1 A_WeaponOffset(0,Random(32,33),WOF_INTERPOLATE);
		Goto Ready;
	*/
	Spawn:
		XHPR A -1;
		Stop;
  }
}

Class PlasmaHeat : Ammo
{
Default{
  Inventory.PickupMessage "Picked up a, heat... how?";
  Inventory.Amount 0;
  Inventory.MaxAmount 25;
  Ammo.BackpackAmount 0;
  Ammo.BackpackMaxAmount 25;
  Inventory.Icon "HEATA0";
  }
  States
  {
	Spawn:
		HEAT A -1;
		Stop;
  }
}

Class HeatBlastPuff : HC_BulletPuff
{
Default {
  +NOBLOCKMAP;
  +NOGRAVITY;
  +ALLOWPARTICLES;
  +EXTREMEDEATH;
  +RANDOMIZE;
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 0.75;
  Decal "PlasmaScorch";

  VSpeed 1;
  Mass 5;
  }
  States
  {
	Spawn:
		PLSE ABCDE 4 Bright;
		Stop;
  }
}

//BLUE PLASMA

class HC_PlasmaBall : Actor
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 140;
 		DamageFunction 45;//10;
		
		RenderStyle "Add";
		Alpha 0.75;
		
		//SeeSound "weapons/plasmaf";
		
		DeathSound "weapons/plasmax";
		Obituary "$OB_MPPLASMARIFLE";
		Decal "PlasmaScorch";
		
		Projectile;
		+RANDOMIZE
		+ZDOOMTRANS
	}
	States
	{
 	Spawn:
		PLSS A 1 Bright A_SpawnItemEx("HC_PlasmaBallFX");
		PLSS A 1 Bright A_SpawnItemEx("HC_PlasmaBallFX");
		PLSS A 1 Bright A_SpawnItemEx("HC_PlasmaBallFX");
		
		PLSS B 1 Bright A_SpawnItemEx("HC_PlasmaBallFX");
		PLSS B 1 Bright A_SpawnItemEx("HC_PlasmaBallFX");
		PLSS B 1 Bright A_SpawnItemEx("HC_PlasmaBallFX");
		Loop;
	Death:
		PLSE ABC 1;
		TNT1 A 0
		{
			for (int i = random(6,8); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(2,4); i > 0; i--)
			{
				A_SpawnItemEx("HC_PlasmaBallFX",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
			}
		}
		PLSE DDEEE 1 Bright;
		Stop;
	}
}

class HC_PlasmaBallFX : HC_FXClass
{
	
	double PBFXScale;
	
	Default
	{
		Radius 8;
		Height 8;
		Speed 270;
		
		RenderStyle "Add";
		Alpha 0.75;
		
		+NOBLOCKMAP
		//+NOCLIP
		+NOGRAVITY
		+DONTSPLASH
		+NOTELEPORT
		+FORCEXYBILLBOARD
		+RANDOMIZE
		+ZDOOMTRANS
	}
	States
	{
 	Spawn:
		TNT1 A 0;
		TNT1 A 0 {invoker.PBFXScale++;}
		TNT1 A 0;
	Fly:
		PLSS A 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLSS A 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLSS A 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		
		PLSS B 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLSS B 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLSS B 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		Loop;
	}
}

//RED PLASMA

class HC_GreenPlasmaBall : Actor
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 140;
 		DamageFunction 45;// 10;
		
		RenderStyle "Add";
		Alpha 0.75;
		
		//SeeSound "weapons/plasmaf";
		
		DeathSound "weapons/plasmax";
		Obituary "$OB_MPPLASMARIFLE";
		Decal "PlasmaScorchRed";
		
		Projectile;
		+RANDOMIZE
		+ZDOOMTRANS
	}
	States
	{
 	Spawn:
		PLRS A 1 Bright A_SpawnItemEx("HC_GreenPlasmaBallFX");
		PLRS A 1 Bright A_SpawnItemEx("HC_GreenPlasmaBallFX");
		PLRS A 1 Bright A_SpawnItemEx("HC_GreenPlasmaBallFX");
		
		PLRS B 1 Bright A_SpawnItemEx("HC_GreenPlasmaBallFX");
		PLRS B 1 Bright A_SpawnItemEx("HC_GreenPlasmaBallFX");
		PLRS B 1 Bright A_SpawnItemEx("HC_GreenPlasmaBallFX");
		Loop;
	Death:
		PLRE ABC 1;
		TNT1 A 0
		{
			for (int i = random(6,8); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(2,4); i > 0; i--)
			{
				A_SpawnItemEx("HC_GreenPlasmaBallFX",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
			}
		}
		PLRE DDEEE 1 Bright;
		Stop;
	}
}

class HC_GreenPlasmaBallFX : HC_FXClass
{
	
	double PBFXScale;
	
	Default
	{
		Radius 8;
		Height 8;
		Speed 270;
		
		RenderStyle "Add";
		Alpha 0.75;
		
		+NOBLOCKMAP
		//+NOCLIP
		+NOGRAVITY
		+DONTSPLASH
		+NOTELEPORT
		+FORCEXYBILLBOARD
		+RANDOMIZE
		+ZDOOMTRANS
	}
	States
	{
 	Spawn:
		TNT1 A 0;
		TNT1 A 0 {invoker.PBFXScale++;}
		TNT1 A 0;
	Fly:
		PLRS A 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLRS A 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLRS A 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		
		PLRS B 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLRS B 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		PLRS B 1 Bright {A_SetScale(invoker.PBFXScale = invoker.PBFXScale - 0.075); A_FadeOut(0.075);}
		Loop;
	}
}