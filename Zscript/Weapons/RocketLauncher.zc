Class DeimosHarbinger : HellCrusherW Replaces RocketLauncher
{
	Default {
	Weapon.BobRangeX 0.2;//0.5;
	Weapon.BobRangeY 0.4;//0.3;
	
	
	Weapon.SelectionOrder 2500;
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 2;//8;
	Weapon.AmmoType "HC_RocketAmmo";
	
	Inventory.PickupMessage "You got the Deimos Harbinger heavy rocket launcher! High velocity liquidation.";
	Inventory.PickupSound "RocketLauncherGet";
	Tag "Deimos Harbinger";

	+WEAPON.NOAUTOFIRE
	+WEAPON.NOALERT
	+WEAPON.ALT_USES_BOTH
}
States
{
	Ready:
		TNT1 A 0 A_SetCrosshair(58);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 {A_Overlay(10,"ReadyBody"); A_Overlay(9,"ReadyGrip"); A_Overlay(8,"ReadyMag"); A_Overlay(7,"ReadyBarrel");}
		TNT1 A 1 A_WeaponReady;
		Loop;
	
	
	///////////////////////////////////////READY OVERLAY SET///////////////////////////////
	ReadyBody:
		HRKL J 1;
		Stop;
	
	ReadyBarrel:
		HRKL D 1;
		Stop;
	
	ReadyMag:
		HRKL K 1;
		Stop;
	
	ReadyGrip:
		HRKL M 1;
		Stop;
	
	////////////////////////////////////////////////////////////////////////////////////////
	
	Ready3:
		TNT1 A 1 A_Jump(255, "Ready3");
	
	Select:
		//TNT1 A 1 A_Raise;
		TNT1 A 0 A_SetCrosshair(58);
		TNT1 A 0 A_StartSound("RocketLauncherSelect",CHAN_5,0,1);
		
		TNT1 A 0 A_ZoomFactor(1);
		HRKL ABC 1 {A_WeaponReady(WRF_NOFIRE);	A_OverlayRotate(0,0);	A_WeaponOffset(0,32);}
		Goto Ready;
	
	Deselect:
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 {A_Overlay(10,"*"); A_Overlay(9,"*"); A_Overlay(8,"*"); A_Overlay(7,"*");}
		HRKL CBA 1 Offset(0,32);
		TNT1 A 0 A_Lower;
		Wait;
		
	DeselectQuickMelee:
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 {A_Overlay(10,"*"); A_Overlay(9,"*"); A_Overlay(8,"*"); A_Overlay(7,"*");}
		HRKL CA 1 Offset(0,32);
		TNT1 A 0 A_Lower;
		Goto QuickMeleeStart;
		
	Feel:
		TNT1 A 0 A_QuakeEx(1,1,1,9,0,100,"*");
		TNT1 A 0 A_SetPitch(pitch-4);
		TNT1 A 1 A_ZoomFactor(0.89);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.90);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.92);
		TNT1 A 1 A_ZoomFactor(0.94);
		TNT1 A 1 A_ZoomFactor(0.96);
		TNT1 A 1 A_ZoomFactor(0.98);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
	
	Fire:
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.9);
		TNT1 A 0 A_StartSound("RocketlauncherFire",CHAN_5,0,.8);
		
		TNT1 A 0 A_FireProjectile ("HC_Rocket");
		TNT1 A 0 {A_Overlay(10,"FireBody"); A_Overlay(9,"FireGrip"); A_Overlay(8,"FireMag"); A_Overlay(7,"FireBarrel"); A_Overlay(-5,"Feel");}
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(37,40),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(38,47),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(40,47),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(39,40),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(34,37),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(33,36),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(32,34),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A 0 A_Refire;
		Goto Ready;
	
	///////////////////////////////////////FIRE OVERLAY SET///////////////////////////////
	FireBody:
		HRKL J 10;
		Stop;
	
	FireBarrel:
		HRKL E 1 Offset(0,20);
		HRKL F 1 Offset(0,21);
		HRKL G 1 Offset(0,22);
		HRKL H 1 Offset(0,20);
		HRKL I 1 Offset(0,19);
		HRKL I 1 Offset(0,18);
		HRKL I 1 Offset(0,15);
		HRKL D 1 Offset(0,10);
		HRKL D 1 Offset(0,5);
		HRKL D 1 Offset(0,2);
		//TNT1 A 0 Offset(0,12);
		Stop;
	
	FireMag:
		HRKL K 6;
		HRKL L 2;
		HRKL K 2;
		Stop;
	
	FireGrip:
		HRKL M 10;
		Stop;
	
	////////////////////////////////////////////////////////////////////////////////////////
	
	Altfire:
	
		TNT1 A 0 A_JumpIfInventory("HC_RocketAmmo",4,"BurstFire");
		
		TNT1 A 0 A_StartSound("RocketBurstLoadFail",CHAN_5,0,.6);
		//TNT1 A 0 A_JumpIf(CountInv("HC_RocketAmmo") == 2, "Fire");
		//TNT1 A 0 A_JumpIf(CountInv("HC_RocketAmmo") == 1, "Fire");
		Goto Ready;
		
	BurstFire:
		TNT1 A 0 {A_Overlay(10,"BFireBody"); A_Overlay(9,"BFireGrip"); A_Overlay(8,"BFireMag"); A_Overlay(7,"BFireBarrel");}
		TNT1 A 15;
		
		// Fire!!!!
		
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(60,70),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(60,70),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(60,70),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(60,70),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(55,65),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(54,63),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(50,60),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(48,49),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(48,49),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(47,48),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(39,42),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(34,36),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(32,34),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOBOB);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),Random(32,33),WOF_INTERPOLATE);
		TNT1 A 0 A_Refire;
		Goto Ready;
	////////////////////////////////////////////////////////////////////////////////////////
	
	BFireBody:
		HRKL J 31;
		Stop;
		
	AltFeel:
		TNT1 A 0 A_QuakeEx(1,1,1,9,0,100,"*");
		TNT1 A 0 A_SetPitch(pitch-6);
		TNT1 A 1 A_ZoomFactor(0.83);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.84);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.86);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(0.86);
		TNT1 A 1 A_ZoomFactor(0.90);
		TNT1 A 1 A_ZoomFactor(0.93);
		TNT1 A 1 A_ZoomFactor(0.94);
		TNT1 A 1 A_ZoomFactor(0.96);
		TNT1 A 1 A_ZoomFactor(0.98);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
	
	BFireBarrel:
		HRKL D 15;
		
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		
		TNT1 A 0 A_StartSound("RocketlauncherFire",CHAN_5,0,.6);
		TNT1 A 0 A_StartSound("RocketLauncher/Nuke/Fire",CHAN_6,0,1);
		
		TNT1 A 0 A_FireProjectile ("HC_MiniNuke");
		TNT1 A 0 A_Overlay(-5,"AltFeel");
		TNT1 A 0 A_TakeInventory("HC_RocketAmmo", 3);
		/*
		HRKL E 1 Offset(0,20);
		HRKL F 1 Offset(0,21);
		HRKL G 1 Offset(0,22);
		
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		TNT1 A 0 A_StartSound("RocketlauncherFire",CHAN_5,0,.6);
		TNT1 A 0 A_Overlay(-5,"Feel");
		TNT1 A 0 A_FireProjectile ("HC_SeekerRocket");
		
		HRKL E 1 Offset(0,20);
		HRKL F 1 Offset(0,21);
		HRKL G 1 Offset(0,22);
		
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		TNT1 A 0 A_StartSound("RocketlauncherFire",CHAN_5,0,.6);
		TNT1 A 0 A_Overlay(-5,"Feel");
		TNT1 A 0 A_FireProjectile ("HC_SeekerRocket");
		*/
		
		
		HRKL E 1 Offset(0,24);
		HRKL F 1 Offset(0,24);
		HRKL G 1 Offset(0,24);
		HRKL H 1 Offset(0,24);
		
		HRKL I 1 Offset(0,24);
		HRKL I 1 Offset(0,24);
		HRKL I 1 Offset(0,24);
		HRKL I 1 Offset(0,23);
		HRKL I 1 Offset(0,21);
		HRKL I 1 Offset(0,20);
		
		HRKL I 1 Offset(0,19);
		HRKL I 1 Offset(0,18);
		HRKL I 1 Offset(0,15);
		HRKL D 1 Offset(0,10);
		HRKL D 1 Offset(0,5);
		HRKL D 1 Offset(0,2);
		Stop;
		
	BFireMag:
		TNT1 A 0 A_StartSound("RocketBurstLoad1",CHAN_WEAPON,0,.6);
		HRKL L 2;
		HRKL K 2;
		TNT1 A 0 A_StartSound("RocketBurstLoad2",CHAN_WEAPON,0,.6);
		HRKL L 2;
		HRKL K 2;
		TNT1 A 0 A_StartSound("RocketBurstLoad3",CHAN_WEAPON,0,.6);
		HRKL L 2;
		HRKL K 2; //12
		
		HRKL K 19;
		Stop;
	
	BFireGrip:
		HRKL M 1 Offset(-1,2);
		HRKL M 1 Offset(-2,5);
		HRKL M 1 Offset(-3,7);
		HRKL M 1 Offset(-4,9);
		
		HRKL M 23 Offset(-5,10);
		
		HRKL M 1 Offset(-4,9);
		HRKL M 1 Offset(-3,7);
		HRKL M 1 Offset(-2,5);
		HRKL M 1 Offset(-1,2);
		Stop;
	
	////////////////////////////////////////////////////////////////////////////////////////
	
	Spawn:
		HRKP A -1;
		Stop;
	}
}


class HC_Rocket : Actor
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 60;
		DamageFunction 90;//20;
		
		Decal "Scorch";
		DamageType "PlayerRocket";
		Obituary "$OB_MPROCKET";
		
		Projectile;
		+RANDOMIZE
		+DEHEXPLOSION
		+EXTREMEDEATH
		+FORCEXYBILLBOARD
	}
	States
	{
	Spawn:
		TNT1 A 0 A_StartSound("RocketMid",CHAN_5,CHANF_LOOPING);
	RocketFly:
		TNT1 A 0 A_SpawnItemEx("RocketSmokeTrail",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		TNT1 AAA 0 A_SpawnItemEx("HC_Rocket_Fly_FX",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		XMIS A 1 Bright;
		Loop;
	Death:
		TNT1 A 0 A_StopSound(CHAN_5);
		TNT1 A 0 A_Explode(256);
		TNT1 A 0 A_SpawnItemEx("RocketSFX");
		TNT1 A 15;
		TNT1 A 0 A_StartSound("RocketLauncher/Nuke/BoomDistant",CHAN_WEAPON,0,.8);
		TNT1 A 1;
		Stop;
	}
}

Class HC_MiniNuke : FastProjectile
{
	Default{
	Radius 8;
	Height 8;
	Speed 60;
	DamageFunction 1350;//300;
	
	Decal "NukeBurn";
	DamageType "PlayerRocket";
	
	Scale 1.5;
	
	Projectile;
	+FRIENDLY
	+FORCEPAIN
	+RANDOMIZE
	+DEHEXPLOSION
	+EXTREMEDEATH
	+FORCEXYBILLBOARD
	}
	States
	{
		Spawn:
		TNT1 A 0 A_StartSound("RocketMid",CHAN_5,CHANF_LOOPING);
	RocketFly:
		TNT1 A 0 A_SpawnItemEx("RocketSmokeTrail",0,0,15,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		TNT1 AAA 0 A_SpawnItemEx("HC_Rocket_Fly_FX",0,0,15,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		XMIS A 1 Bright;
		Loop;

	Death:
	XDeath:
		TNT1 A 0 A_StopSound(CHAN_5);
		TNT1 A 0 A_Explode(1024,512);
		TNT1 A 0 A_SpawnItemEx("MiniNukeSFX");
		TNT1 A 0 A_StartSound("RocketLauncher/Nuke/BoomA",CHAN_5,0,1);
		TNT1 A 0 A_StartSound("RocketLauncher/Nuke/BoomB",CHAN_6,0,1);
		TNT1 A 0 A_StartSound("RocketLauncher/Nuke/BoomC",CHAN_7,0,1);
		TNT1 A 15;
		TNT1 A 0 A_StartSound("RocketLauncher/Nuke/BoomDistant",CHAN_WEAPON,0,1);
		Stop;
	}
}

Class HC_SeekerRocket : FastProjectile
{
	Default{
	Radius 8;
	Height 8;
	Speed 60;
	DamageFunction 90; //20;
	
	Decal "Scorch";
	DamageType "PlayerRocket";
	
	Projectile;
	+FRIENDLY
	+FORCEPAIN
	+RANDOMIZE
	+DEHEXPLOSION
	+EXTREMEDEATH
	+FORCEXYBILLBOARD
	}
	States
	{
	Spawn:
	
	Fly:
		TNT1 A 0 A_SpawnItemEx("RocketSmokeTrail",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		TNT1 AAA 0 A_SpawnItemEx("HC_Rocket_Fly_FX",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		XMIS A 1 BRIGHT;
		TNT1 A 0 A_SpawnItemEx("RocketSmokeTrail",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		TNT1 AAA 0 A_SpawnItemEx("HC_Rocket_Fly_FX",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		XMIS A 1 BRIGHT;
		TNT1 A 0 A_SpawnItemEx("RocketSmokeTrail",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		TNT1 AAA 0 A_SpawnItemEx("HC_Rocket_Fly_FX",0,0,10,frandom(-1,1),frandom(-1,1),frandom(-1,1));
		XMIS A 1 BRIGHT;
		TNT1 A 0 A_SeekerMissile(9, 30, SMF_PRECISE|SMF_LOOK, 256, 10);
		Loop;

	Death:
	XDeath:
		TNT1 A 0 A_StopSound(CHAN_5);
		TNT1 A 0 A_Explode(256);
		TNT1 A 0 A_SpawnItemEx("RocketSFX");
		Stop;
	}
}

//////////////////////////////////////////////FX

Class HC_Rocket_Fly_FX : HC_FXClass
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.25;
		Scale 0.1;
		VSpeed 1;
		
		+NOGRAVITY
		+DONTSPLASH
		+NOTELEPORT
		+FORCEXYBILLBOARD
	}
	States
	{
	Spawn:
		TNT1 A 0 Nodelay	//[AA] Without NoDelay all functions calls attached
							//to the first frame of Spawn are skipped.
		{
			//[AA] You can't use Random with a double/float. It has to be
			//frandom. With random this would be truncated to 0.
			A_SetScale(Scale.X+frandom(0.01,0.04)); 
			//[AA] These 3 will work both with random and frandom, but frandom will
			//create more variety. Feel free to change them if you want.
			A_SetRoll(Random(0,359)); 
			A_SetPitch(Random(-90,90)); 
			A_SetAngle(Random(0,359));
		}
		FLMF ABCDEFABCDEF 1 Bright A_SetScale(Scale.X-0.005);
		Stop;
	}
}