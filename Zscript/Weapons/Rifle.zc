Class ApocalypseKiller : HellCrusherW {

	bool ScopedIn;
	bool HasFired;
	double SpriteRecoil;
	
 	Default
	{
	Weapon.BobRangeX 0.2;//0.7;
	Weapon.BobRangeY 0.4;//0.5;
	
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse 3;
	Weapon.AmmoGive 10;//20;
	Weapon.AmmoType "HC_Magazine";
	Obituary "$OB_MPPISTOL";
	
	Inventory.Pickupmessage "You got the 30mm Apocalypse Killer assault rifle!";
	Inventory.PickupSound "RifleGet";
	Tag "Apocalypse Killer";
	
	+WEAPON.NOALERT
	}
	States
	{
	
	
	Ready:
		TNT1 A 0 {invoker.ScopedIn = false;}
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 A_SetCrosshair(54);
		TNT1 A 0 A_JumpIfInventory("Quick_Melee_Token",1,"DeselectQuickMelee");
		XAPK D 1 A_WeaponReady;
		Loop;
		
	Ready3:
		TNT1 A 0 {invoker.ScopedIn = false;}
		TNT1 A 1 A_Jump(255, "Ready3");
		
	Select:
		TNT1 A 0 A_SetCrosshair(54);
		TNT1 A 0 A_StartSound("RifleSelect",CHAN_5,0,1);
		TNT1 A 0 {invoker.HasFired = false;}
		TNT1 A 0 A_ZoomFactor(1); 
		
		TNT1 A 0 A_OverlayPivotAlign(0,PSPA_CENTER,PSPA_CENTER);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK D 1 {	A_OverlayRotate(0,18);	 				A_WeaponOffset(25,90);}
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK D 1 {	A_OverlayRotate(0,13,WOF_INTERPOLATE);	 A_WeaponOffset(10,60,WOF_INTERPOLATE);}
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK D 1 {	A_OverlayRotate(0,4,WOF_INTERPOLATE); 	A_WeaponOffset(3,45,WOF_INTERPOLATE);}
		TNT1 A 0 {	A_OverlayRotate(0,0,WOF_INTERPOLATE); 	A_WeaponOffset(0,32,WOF_INTERPOLATE);}
		Goto Ready;
	
	Deselect:
		TNT1 A 0 {invoker.HasFired = false;}
		TNT1 A 0 {invoker.ScopedIn = false;}
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 {A_OverlayPivotAlign(0,PSPA_CENTER,PSPA_CENTER);}
		XAPK D 1 {	A_OverlayRotate(0,4); 						A_WeaponOffset(3,45);}
		XAPK D 1 {	A_OverlayRotate(0,13,WOF_INTERPOLATE);	 A_WeaponOffset(10,60,WOF_INTERPOLATE);}
		XAPK D 1 {	A_OverlayRotate(0,18,WOF_INTERPOLATE);	 A_WeaponOffset(25,90,WOF_INTERPOLATE);}
		TNT1 A 0 {A_OverlayRotate(0,20,WOF_INTERPOLATE); A_WeaponOffset(28,100,WOF_INTERPOLATE);}
		TNT1 A 0 A_Lower;
		Wait;
		
	DeselectQuickMelee:
		TNT1 A 0 {invoker.HasFired = false;}
		TNT1 A 0 {invoker.ScopedIn = false;}
		TNT1 A 0 A_ZoomFactor(1);
		TNT1 A 0 {A_OverlayPivotAlign(0,PSPA_CENTER,PSPA_CENTER);}
		XAPK D 1 {	A_OverlayRotate(0,4); 						A_WeaponOffset(3,45);}
		XAPK D 1 {	A_OverlayRotate(0,18,WOF_INTERPOLATE);		A_WeaponOffset(25,90,WOF_INTERPOLATE);}
		TNT1 A 0 {A_OverlayRotate(0,20,WOF_INTERPOLATE); 		A_WeaponOffset(28,100,WOF_INTERPOLATE);}
		Goto QuickMeleeStart;
		
		
		
		Feel:
		TNT1 A 0 A_QuakeEx(1,1,1,10,0,100,"*");
		
		TNT1 A 0 A_SetPitch(pitch-2);
		TNT1 A 1 A_ZoomFactor(0.90);
		TNT1 A 0 A_SetPitch(pitch+1);
		TNT1 A 1 A_ZoomFactor(0.91);
		TNT1 A 0 A_SetPitch(pitch+1);
		TNT1 A 1 A_ZoomFactor(0.92);
		TNT1 A 1 A_ZoomFactor(0.95);
		TNT1 A 1 A_ZoomFactor(0.96);
		TNT1 A 1 A_ZoomFactor(0.98);
		TNT1 A 1 A_ZoomFactor(0.99);
		TNT1 A 1 A_ZoomFactor(1);
		Stop;
		
	Fire:
		//TNT1 A 0 {invoker.SpriteRecoil = 50;}
		
		TNT1 A 0 A_Jumpif((invoker.ScopedIn == true),"ScopedFire");
		
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		
		TNT1 A 0 A_StartSound("RifleFire",CHAN_6,0,.2);
	ReFire:
		
		
		//TNT1 A 0 A_StartSound("DeagleFire",CHAN_6,0,.3);
		TNT1 A 0 A_StartSound("RifleFire",CHAN_5,0,.9);
		
		//TNT1 A 0 A_Overlay(-10,"SpriteRecoil");
		
		TNT1 A 0 A_FireProjectile("HC_MediumTracer", 0, false, 0, 0, FPF_NOAUTOAIM, 0);
		
		TNT1 A 0 A_RailAttack(100,0,True,"","",RGF_SILENT,0,"RifleGibPuff",0,0,0,1,100,1,"RifleTrail",0,270,10);
							//50
		TNT1 A 0 A_FireBullets (0, 0, 1, 0, "RiflePuff",0);
		
		TNT1 A 0 A_AlertMonsters;
		
		TNT1 A 0 A_WeaponOffset(Random(-2,2),Random(45,50),WOF_INTERPOLATE);
		
		TNT1 A 0 A_Overlay(-5,"Feel");
		
		XAPK E 1 {A_WeaponOffset(Random(-2,2),Random(50,55),WOF_INTERPOLATE);	A_OverlayScale(0,1.3,1.3);}
		XAPK F 1 {A_WeaponOffset(Random(-2,2),Random(45,50),WOF_INTERPOLATE);	A_OverlayScale(0,1.2,1.2);}
		
		TNT1 A 0 A_FireProjectile("RifleSmokeSpawner",0,0,0,-1, FPF_NOAUTOAIM);
		
		//TNT1 AAAAA 0 A_SpawnItemEx("RocketSmokeTrail",20,8,50,frandom(-2,2),frandom(4,8),frandom(-2,2),0,SXF_TRANSFERTRANSLATION );
		//TNT1 AAAAA 0 A_SpawnItemEx("RocketSmokeTrail",20,-8,50,frandom(-2,2),frandom(-8,-4),frandom(-2,2),0,SXF_TRANSFERTRANSLATION );
		
		TNT1 A 0 A_FireProjectile("Riflebulletcasingspawner", 0,0,frandom(0.5,0.6),-1, FPF_NOAUTOAIM);
		
		XAPK D 1 {A_WeaponOffset(Random(-1,1),Random(41,45),WOF_INTERPOLATE);	A_OverlayScale(0,1.15,1.15);}
		XAPK D 1 {A_WeaponOffset(0,Random(37,43),WOF_INTERPOLATE);				A_OverlayScale(0,1.05,1.05);}
		XAPK D 1 {A_WeaponOffset(0,Random(32,34),WOF_INTERPOLATE);				A_OverlayScale(0,1.025,1.025);}
		XAPK D 1 {A_WeaponOffset(0,Random(32,32),WOF_INTERPOLATE);				A_OverlayScale(0,1,1);}
		
		TNT1 A 0 A_Refire("ReFire");
		Goto Ready;
		
		/*
	SpriteRecoil:
		TNT1 A 1 A_WeaponOffset(Random(-2,2),(invoker.SpriteRecoil = invoker.SpriteRecoil/0.95),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(Random(-2,2),(invoker.SpriteRecoil = invoker.SpriteRecoil/0.95),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(Random(-1,1),(invoker.SpriteRecoil = invoker.SpriteRecoil/0.95),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,(invoker.SpriteRecoil = invoker.SpriteRecoil/0.95),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,(invoker.SpriteRecoil = invoker.SpriteRecoil/0.95),WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,(invoker.SpriteRecoil = invoker.SpriteRecoil/0.95),WOF_INTERPOLATE);
		Stop;
		*/
		
	ScopedFire:
		TNT1 A 0 A_Jumpif((invoker.HasFired == true),"ScopedIn");
		TNT1 A 0 A_JumpIfInventory("HC_Magazine",12,1);
		Goto Click;
		
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 {invoker.HasFired = True;}
		TNT1 A 0 A_TakeInventory("HC_Magazine", 9);
		
		TNT1 A 0 A_FireProjectile("HC_LargeTracer", 0, false, 0, 0, FPF_NOAUTOAIM, 0);
		
		TNT1 A 0 A_RailAttack(400,0,True,"","",RGF_SILENT,0,"RifleGibPuff",0,0,0,1,100,1,"RifleTrail",0,270);
								//200
		TNT1 A 0 A_FireBullets (0, 0, 1, 0, "RiflePuffBIG",0);
		
		TNT1 AAAA 0 A_FireProjectile("Riflebulletcasingspawner", 0,0,frandom(0.5,0.6),-1, FPF_NOAUTOAIM);
		
		TNT1 A 0 A_Overlay(-5,"ScopedFeel");
		
		TNT1 A 0 A_JumpIf(CountInv("HC_PowerQuadDamage") == 0, 2);
		TNT1 A 0 A_StartSound("QuadDamageShot",CHAN_ITEM,0,.7);
		
		
		//TNT1 A 0 A_StartSound("Rifle/SniperModeFire",CHAN_7,0,.8);
		TNT1 A 0 A_StartSound("RifleFire",CHAN_5,0,.5);
		TNT1 A 0 A_StartSound("ScopeAdd1",CHAN_6,0,1);
		TNT1 A 0 A_StartSound("ScopeAdd2",CHAN_7,0,.9);
		
		TNT1 A 0 A_Overlay(100,"Timer");
		
		
		XAPK K 1 A_WeaponOffset(random(-3,3),random(32,40),WOF_INTERPOLATE);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK K 1 A_WeaponOffset(random(-2,2),random(32,38),WOF_INTERPOLATE);
		TNT1 A 0 A_FireProjectile("RifleSmokeScopeSpawner",0,0,0,-1, FPF_NOAUTOAIM);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK K 1 A_WeaponOffset(random(-1,1),random(32,36),WOF_INTERPOLATE);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK K 1 A_WeaponOffset(random(-1,1),random(32,34),WOF_INTERPOLATE);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK K 1 A_WeaponOffset(random(-1,1),random(32,33),WOF_INTERPOLATE);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_WeaponOffset(0,32);
		
		Goto ScopedIn;
		
	Click:
		TNT1 A 0 A_StartSound("ScopeDry",CHAN_5,0,.6);
		XAPK K 15 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		Goto ScopedIn;
		
	Timer:
		TNT1 A 75;
		TNT1 A 0 A_StartSound("ScopeReady",CHAN_6,0,.6);
		TNT1 A 0 {invoker.HasFired = False;}
		Stop;
		
	AltFire:
		TNT1 A 0 A_Jumpif((invoker.ScopedIn == true),"ScopedIn");
		TNT1 A 0 A_StartSound("ScopeIn",CHAN_5,0,.9);
		TNT1 A 0 {invoker.ScopedIn = true;}
		
		TNT1 A 0 A_WeaponReady(WRF_NOSWITCH|WRF_NOSECONDARY);
		XAPK I 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.1);
	
		TNT1 A 0 A_WeaponReady(WRF_NOSWITCH|WRF_NOSECONDARY);
		XAPK I 1 A_WeaponOffset(0,60,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.2);
		
		TNT1 A 0 A_WeaponReady(WRF_NOSWITCH|WRF_NOSECONDARY);
		XAPK I 1 A_WeaponOffset(0,96,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.3);
		
		TNT1 A 0 A_WeaponReady(WRF_NOSWITCH|WRF_NOSECONDARY);
		XAPK I 1 A_WeaponOffset(0,123,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.4);
		
		TNT1 A 0 A_WeaponReady(WRF_NOSWITCH|WRF_NOSECONDARY);
		XAPK I 1 A_WeaponOffset(0,128,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.5);
		
		
	ScopedIn:
		TNT1 A 0 A_SetCrosshair(62);
		//TNT1 A 0 A_SetCrosshairColor(RED);
		
		TNT1 A 0 {invoker.ScopedIn = true;}
		//TNT1 A 0 A_ZoomFactor(1.5);
		TNT1 A 0 A_WeaponReady();
		XAPK K 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		
		TNT1 A 0 {invoker.ScopedIn = true;}
		//TNT1 A 0 A_ZoomFactor(1.5);
		TNT1 A 0 A_WeaponReady();
		XAPK K 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		/*
		TNT1 A 0 {invoker.ScopedIn = true;}
		//TNT1 A 0 A_ZoomFactor(1.5);
		TNT1 A 0 A_WeaponReady();
		XAPK K 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		
		TNT1 A 0 {invoker.ScopedIn = true;}
		//TNT1 A 0 A_ZoomFactor(1.5);
		TNT1 A 0 A_WeaponReady();
		XAPK K 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		
		TNT1 A 0 {invoker.ScopedIn = true;}
		//TNT1 A 0 A_ZoomFactor(1.5);
		TNT1 A 0 A_WeaponReady();
		XAPK K 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		*/
		
		
		TNT1 A 0 A_Refire("ScopedIn");
		
		
		
		
		TNT1 A 0 A_StartSound("ScopeOut",CHAN_5,0,.9);
		TNT1 A 0 A_SetCrosshair(54);
		
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK K 1 A_WeaponOffset(0,128,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.4);
		
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK I 1 A_WeaponOffset(0,123,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.3);
		
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK I 1 A_WeaponOffset(0,96,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.2);
		
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK I 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1.1);
		
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		XAPK D 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A 0 A_ZoomFactor(1);
		Goto Ready;
		
		
	ScopedFeel:
		TNT1 A 0 A_QuakeEx(1,1,1,24,0,100,"*");
		TNT1 A 0 A_SetPitch(pitch-6);
		TNT1 A 1 A_ZoomFactor(1.2);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(1.21);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(1.23);
		TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(1.25);
		//TNT1 A 0 A_SetPitch(pitch+2);
		TNT1 A 1 A_ZoomFactor(1.33);
		TNT1 A 1 A_ZoomFactor(1.38);
		TNT1 A 1 A_ZoomFactor(1.41);
		TNT1 A 1 A_ZoomFactor(1.43);
		TNT1 A 1 A_ZoomFactor(1.45);
		TNT1 A 1 A_ZoomFactor(1.47);
		TNT1 A 1 A_ZoomFactor(1.49);
		TNT1 A 1 A_ZoomFactor(1.5);
		Stop;
		
	Spawn:
		XAPK G -1;
		Stop;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Class RifleGibPuff : HC_BulletPuff
{	
	Default
	{
	//ProjectileKickback 600;
	+EXTREMEDEATH
	-NOEXTREMEDEATH
	}
}

Class RifleTrail : Actor
{
	Default {
	Radius 32;
	//Height 56
	}
	States
	{
	Spawn:
	TNT1 A 0;
	
	TNT1 A 0 A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-3,3),frandom(-3,3),frandom(-3,3));
	Stop;
	}
}

Class RiflePuff : HC_BulletPuff
{	
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ALLOWPARTICLES
		+RANDOMIZE
		+ZDOOMTRANS
		+ROLLSPRITE
		+FORCEXYBILLBOARD
		Decal "PlasmaScorchLower";
		Renderstyle "Add";
		radius 2;
		Height 2;
		Scale 0.7;
	}
	
		States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
			for (int i = random(15,20); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-3,3),frandom(-3,3),frandom(-3,3));
			}
		}
		
		TNT1 A 0 A_StartSound("BulletImpactLarge",0,CHANF_DEFAULT,0.6);
		
		TNT1 AAAAA 0 A_SpawnItemEx("HC_PuffParticlesBase",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
		TNT1 AAAA 0 A_SpawnItemEx("HC_PuffParticlesBig",0,0,0,frandom(-15,15),frandom(-15,15),frandom(-15,15));
		TNT1 AA 0 A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
		
		TNT1 A 0 A_SetRoll(random(0,359));
		PUFB ABCDEF 1 Bright;
		
		//PUFF A 1 Bright;
		//PUFF B 1;
		//PUFF CD 1;
		Stop;
	}
}

Class RiflePuffBIG : HC_BulletPuff
{	
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ALLOWPARTICLES
		+RANDOMIZE
		+ZDOOMTRANS
		+ROLLSPRITE
		+FORCEXYBILLBOARD
		Decal "Scorch";
		Renderstyle "Add";
		radius 2;
		Height 2;
		Scale 1;
	}
	
		States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
			for (int i = random(20,30); i > 0; i--)
			{
				A_SpawnItemEx("RocketSmokeTrail",0,0,0,frandom(-4,4),frandom(-4,4),frandom(-4,4));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(4,11); i > 0; i--)
			{
				A_SpawnItemEx("ExplosiveDebris",0,0,0,frandom(-30,30),frandom(-30,30),frandom(-30,30));
			}
		}
		
		TNT1 A 0
		{
			for (int i = random(1,3); i > 0; i--)
			{
				A_SpawnItemEx("ExplosionShockWave",0,0,0,0,0,0);
			}
		}
		
		TNT1 A 0 A_StartSound("BulletImpactLarge",0,CHANF_DEFAULT,0.8);
		
		TNT1 AAAAAAA 0 A_SpawnItemEx("HC_PuffParticlesBase",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
		TNT1 AAAAAA 0 A_SpawnItemEx("HC_PuffParticlesBig",0,0,0,frandom(-15,15),frandom(-15,15),frandom(-15,15));
		TNT1 AAAAA 0 A_SpawnItemEx("HC_PuffParticlesHUGE",0,0,0,frandom(-10,10),frandom(-10,10),frandom(-10,10));
		
		TNT1 A 0 A_SetRoll(random(0,359));
		PUFB ABCDEF 1 Bright;
		
		//PUFF A 1 Bright;
		//PUFF B 1;
		//PUFF CD 1;
		Stop;
	}
}

Class RifleSmokeSpawner : Actor
{
	Default {
	radius 2;
	Height 2;
	Speed 20;
	Damage 0;
	
	Projectile;
	+THRUACTORS
	+NOCLIP
	+NOTELEPORT
	}
	States
	{
	Spawn:
		TNT1 A 1;
	Death:
		TNT1 AAAAA 0 A_SpawnItemEx("RocketSmokeTrail",20,40,-5,frandom(-2,2),frandom(5,10),frandom(-2,2),0,SXF_TRANSFERTRANSLATION );
		TNT1 AAAAA 0 A_SpawnItemEx("RocketSmokeTrail",20,-40,-5,frandom(-2,2),frandom(-10,-5),frandom(-2,2),0,SXF_TRANSFERTRANSLATION );
		Stop;
	}
}

Class RifleSmokeScopeSpawner : Actor
{
	Default {
	radius 2;
	Height 2;
	Speed 20;
	Damage 0;
	
	Projectile;
	+THRUACTORS
	+NOCLIP
	+NOTELEPORT
	}
	States
	{
	Spawn:
		TNT1 A 1;
	Death:
		TNT1 AAAAA 0 A_SpawnItemEx("RocketSmokeTrail",10,30,-15,frandom(-2,2),frandom(5,10),frandom(-2,2),0,SXF_TRANSFERTRANSLATION );
		TNT1 AAAAA 0 A_SpawnItemEx("RocketSmokeTrail",10,-30,-15,frandom(-2,2),frandom(-10,-5),frandom(-2,2),0,SXF_TRANSFERTRANSLATION );
		Stop;
	}
}